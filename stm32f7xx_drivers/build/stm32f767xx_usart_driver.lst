ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32f767xx_usart_driver.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USART_PeriClockControl,"ax",%progbits
  19              		.align	1
  20              		.global	USART_PeriClockControl
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	USART_PeriClockControl:
  26              	.LFB0:
  27              		.file 1 "drivers/Src/stm32f767xx_usart_driver.c"
   1:drivers/Src/stm32f767xx_usart_driver.c **** /**
   2:drivers/Src/stm32f767xx_usart_driver.c ****  * @file stm32f767xx_usart_driver.c
   3:drivers/Src/stm32f767xx_usart_driver.c ****  * @author johannes regnier
   4:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief 
   5:drivers/Src/stm32f767xx_usart_driver.c ****  * @version 0.1
   6:drivers/Src/stm32f767xx_usart_driver.c ****  * @date 2022-10-05
   7:drivers/Src/stm32f767xx_usart_driver.c ****  * 
   8:drivers/Src/stm32f767xx_usart_driver.c ****  * @copyright Copyright (c) 2022
   9:drivers/Src/stm32f767xx_usart_driver.c ****  * 
  10:drivers/Src/stm32f767xx_usart_driver.c ****  */
  11:drivers/Src/stm32f767xx_usart_driver.c **** 
  12:drivers/Src/stm32f767xx_usart_driver.c **** 
  13:drivers/Src/stm32f767xx_usart_driver.c **** #include "stm32f767xx_usart_driver.h"
  14:drivers/Src/stm32f767xx_usart_driver.c **** 
  15:drivers/Src/stm32f767xx_usart_driver.c **** 
  16:drivers/Src/stm32f767xx_usart_driver.c **** 
  17:drivers/Src/stm32f767xx_usart_driver.c **** 
  18:drivers/Src/stm32f767xx_usart_driver.c **** 
  19:drivers/Src/stm32f767xx_usart_driver.c **** /**
  20:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART_PeriClockControl
  21:drivers/Src/stm32f767xx_usart_driver.c ****  * 
  22:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTx 
  23:drivers/Src/stm32f767xx_usart_driver.c ****  * @param EnorDi ENABLE or DISABLE macros
  24:drivers/Src/stm32f767xx_usart_driver.c ****  */
  25:drivers/Src/stm32f767xx_usart_driver.c **** void USART_PeriClockControl(USART_RegDef_t *pUSARTx, uint8_t EnorDi)
  26:drivers/Src/stm32f767xx_usart_driver.c **** {
  28              		.loc 1 26 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 2


  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 0B46     		mov	r3, r1
  42 000a FB70     		strb	r3, [r7, #3]
  27:drivers/Src/stm32f767xx_usart_driver.c ****  if (EnorDi == ENABLE)
  43              		.loc 1 27 5
  44 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  45 000e 012B     		cmp	r3, #1
  46 0010 57D1     		bne	.L2
  28:drivers/Src/stm32f767xx_usart_driver.c ****     {
  29:drivers/Src/stm32f767xx_usart_driver.c ****         if(pUSARTx == USART1)
  47              		.loc 1 29 11
  48 0012 7B68     		ldr	r3, [r7, #4]
  49 0014 594A     		ldr	r2, .L19
  50 0016 9342     		cmp	r3, r2
  51 0018 06D1     		bne	.L3
  30:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  31:drivers/Src/stm32f767xx_usart_driver.c **** 			USART1_PCLK_EN();
  52              		.loc 1 31 4
  53 001a 594B     		ldr	r3, .L19+4
  54 001c 5B6C     		ldr	r3, [r3, #68]
  55 001e 584A     		ldr	r2, .L19+4
  56 0020 43F01003 		orr	r3, r3, #16
  57 0024 5364     		str	r3, [r2, #68]
  32:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART2)
  33:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  34:drivers/Src/stm32f767xx_usart_driver.c **** 			USART2_PCLK_EN();
  35:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART3)
  36:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  37:drivers/Src/stm32f767xx_usart_driver.c **** 			USART3_PCLK_EN();
  38:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART4)
  39:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  40:drivers/Src/stm32f767xx_usart_driver.c **** 			UART4_PCLK_EN();
  41:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART5)
  42:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  43:drivers/Src/stm32f767xx_usart_driver.c **** 			UART5_PCLK_EN();
  44:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART6)
  45:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  46:drivers/Src/stm32f767xx_usart_driver.c **** 			USART6_PCLK_EN();
  47:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART7)
  48:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  49:drivers/Src/stm32f767xx_usart_driver.c **** 			UART7_PCLK_EN();
  50:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART8)
  51:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  52:drivers/Src/stm32f767xx_usart_driver.c **** 			UART8_PCLK_EN();
  53:drivers/Src/stm32f767xx_usart_driver.c **** 		}
  54:drivers/Src/stm32f767xx_usart_driver.c ****     } 
  55:drivers/Src/stm32f767xx_usart_driver.c ****     else
  56:drivers/Src/stm32f767xx_usart_driver.c ****     {
  57:drivers/Src/stm32f767xx_usart_driver.c ****         if(pUSARTx == USART1)
  58:drivers/Src/stm32f767xx_usart_driver.c **** 		{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 3


  59:drivers/Src/stm32f767xx_usart_driver.c **** 			USART1_PCLK_DI();
  60:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART2)
  61:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  62:drivers/Src/stm32f767xx_usart_driver.c **** 			USART2_PCLK_DI();
  63:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART3)
  64:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  65:drivers/Src/stm32f767xx_usart_driver.c **** 			USART3_PCLK_DI();
  66:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART4)
  67:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  68:drivers/Src/stm32f767xx_usart_driver.c **** 			UART4_PCLK_DI();
  69:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART5)
  70:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  71:drivers/Src/stm32f767xx_usart_driver.c **** 			UART5_PCLK_DI();
  72:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART6)
  73:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  74:drivers/Src/stm32f767xx_usart_driver.c **** 			USART6_PCLK_DI();
  75:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART7)
  76:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  77:drivers/Src/stm32f767xx_usart_driver.c **** 			UART7_PCLK_DI();
  78:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART8)
  79:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  80:drivers/Src/stm32f767xx_usart_driver.c **** 			UART8_PCLK_DI();
  81:drivers/Src/stm32f767xx_usart_driver.c **** 		}
  82:drivers/Src/stm32f767xx_usart_driver.c ****     }
  83:drivers/Src/stm32f767xx_usart_driver.c **** }
  58              		.loc 1 83 1
  59 0026 A3E0     		b	.L18
  60              	.L3:
  32:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART2)
  61              		.loc 1 32 12
  62 0028 7B68     		ldr	r3, [r7, #4]
  63 002a 564A     		ldr	r2, .L19+8
  64 002c 9342     		cmp	r3, r2
  65 002e 06D1     		bne	.L5
  34:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART3)
  66              		.loc 1 34 4
  67 0030 534B     		ldr	r3, .L19+4
  68 0032 1B6C     		ldr	r3, [r3, #64]
  69 0034 524A     		ldr	r2, .L19+4
  70 0036 43F40033 		orr	r3, r3, #131072
  71 003a 1364     		str	r3, [r2, #64]
  72              		.loc 1 83 1
  73 003c 98E0     		b	.L18
  74              	.L5:
  35:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  75              		.loc 1 35 12
  76 003e 7B68     		ldr	r3, [r7, #4]
  77 0040 514A     		ldr	r2, .L19+12
  78 0042 9342     		cmp	r3, r2
  79 0044 06D1     		bne	.L6
  37:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART4)
  80              		.loc 1 37 4
  81 0046 4E4B     		ldr	r3, .L19+4
  82 0048 1B6C     		ldr	r3, [r3, #64]
  83 004a 4D4A     		ldr	r2, .L19+4
  84 004c 43F48023 		orr	r3, r3, #262144
  85 0050 1364     		str	r3, [r2, #64]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 4


  86              		.loc 1 83 1
  87 0052 8DE0     		b	.L18
  88              	.L6:
  38:drivers/Src/stm32f767xx_usart_driver.c **** 		{
  89              		.loc 1 38 12
  90 0054 7B68     		ldr	r3, [r7, #4]
  91 0056 4D4A     		ldr	r2, .L19+16
  92 0058 9342     		cmp	r3, r2
  93 005a 06D1     		bne	.L7
  40:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART5)
  94              		.loc 1 40 4
  95 005c 484B     		ldr	r3, .L19+4
  96 005e 1B6C     		ldr	r3, [r3, #64]
  97 0060 474A     		ldr	r2, .L19+4
  98 0062 43F40023 		orr	r3, r3, #524288
  99 0066 1364     		str	r3, [r2, #64]
 100              		.loc 1 83 1
 101 0068 82E0     		b	.L18
 102              	.L7:
  41:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 103              		.loc 1 41 12
 104 006a 7B68     		ldr	r3, [r7, #4]
 105 006c 484A     		ldr	r2, .L19+20
 106 006e 9342     		cmp	r3, r2
 107 0070 06D1     		bne	.L8
  43:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART6)
 108              		.loc 1 43 4
 109 0072 434B     		ldr	r3, .L19+4
 110 0074 1B6C     		ldr	r3, [r3, #64]
 111 0076 424A     		ldr	r2, .L19+4
 112 0078 43F48013 		orr	r3, r3, #1048576
 113 007c 1364     		str	r3, [r2, #64]
 114              		.loc 1 83 1
 115 007e 77E0     		b	.L18
 116              	.L8:
  44:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 117              		.loc 1 44 12
 118 0080 7B68     		ldr	r3, [r7, #4]
 119 0082 444A     		ldr	r2, .L19+24
 120 0084 9342     		cmp	r3, r2
 121 0086 06D1     		bne	.L9
  46:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART7)
 122              		.loc 1 46 4
 123 0088 3D4B     		ldr	r3, .L19+4
 124 008a 5B6C     		ldr	r3, [r3, #68]
 125 008c 3C4A     		ldr	r2, .L19+4
 126 008e 43F02003 		orr	r3, r3, #32
 127 0092 5364     		str	r3, [r2, #68]
 128              		.loc 1 83 1
 129 0094 6CE0     		b	.L18
 130              	.L9:
  47:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 131              		.loc 1 47 12
 132 0096 7B68     		ldr	r3, [r7, #4]
 133 0098 3F4A     		ldr	r2, .L19+28
 134 009a 9342     		cmp	r3, r2
 135 009c 06D1     		bne	.L10
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 5


  49:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART8)
 136              		.loc 1 49 4
 137 009e 384B     		ldr	r3, .L19+4
 138 00a0 1B6C     		ldr	r3, [r3, #64]
 139 00a2 374A     		ldr	r2, .L19+4
 140 00a4 43F08043 		orr	r3, r3, #1073741824
 141 00a8 1364     		str	r3, [r2, #64]
 142              		.loc 1 83 1
 143 00aa 61E0     		b	.L18
 144              	.L10:
  50:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 145              		.loc 1 50 12
 146 00ac 7B68     		ldr	r3, [r7, #4]
 147 00ae 3B4A     		ldr	r2, .L19+32
 148 00b0 9342     		cmp	r3, r2
 149 00b2 5DD1     		bne	.L18
  52:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 150              		.loc 1 52 4
 151 00b4 324B     		ldr	r3, .L19+4
 152 00b6 1B6C     		ldr	r3, [r3, #64]
 153 00b8 314A     		ldr	r2, .L19+4
 154 00ba 43F00043 		orr	r3, r3, #-2147483648
 155 00be 1364     		str	r3, [r2, #64]
 156              		.loc 1 83 1
 157 00c0 56E0     		b	.L18
 158              	.L2:
  57:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 159              		.loc 1 57 11
 160 00c2 7B68     		ldr	r3, [r7, #4]
 161 00c4 2D4A     		ldr	r2, .L19
 162 00c6 9342     		cmp	r3, r2
 163 00c8 06D1     		bne	.L11
  59:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART2)
 164              		.loc 1 59 4
 165 00ca 2D4B     		ldr	r3, .L19+4
 166 00cc 5B6C     		ldr	r3, [r3, #68]
 167 00ce 2C4A     		ldr	r2, .L19+4
 168 00d0 23F01003 		bic	r3, r3, #16
 169 00d4 5364     		str	r3, [r2, #68]
 170              		.loc 1 83 1
 171 00d6 4BE0     		b	.L18
 172              	.L11:
  60:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 173              		.loc 1 60 12
 174 00d8 7B68     		ldr	r3, [r7, #4]
 175 00da 2A4A     		ldr	r2, .L19+8
 176 00dc 9342     		cmp	r3, r2
 177 00de 06D1     		bne	.L12
  62:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART3)
 178              		.loc 1 62 4
 179 00e0 274B     		ldr	r3, .L19+4
 180 00e2 1B6C     		ldr	r3, [r3, #64]
 181 00e4 264A     		ldr	r2, .L19+4
 182 00e6 23F40033 		bic	r3, r3, #131072
 183 00ea 1364     		str	r3, [r2, #64]
 184              		.loc 1 83 1
 185 00ec 40E0     		b	.L18
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 6


 186              	.L12:
  63:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 187              		.loc 1 63 12
 188 00ee 7B68     		ldr	r3, [r7, #4]
 189 00f0 254A     		ldr	r2, .L19+12
 190 00f2 9342     		cmp	r3, r2
 191 00f4 06D1     		bne	.L13
  65:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART4)
 192              		.loc 1 65 4
 193 00f6 224B     		ldr	r3, .L19+4
 194 00f8 1B6C     		ldr	r3, [r3, #64]
 195 00fa 214A     		ldr	r2, .L19+4
 196 00fc 23F48023 		bic	r3, r3, #262144
 197 0100 1364     		str	r3, [r2, #64]
 198              		.loc 1 83 1
 199 0102 35E0     		b	.L18
 200              	.L13:
  66:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 201              		.loc 1 66 12
 202 0104 7B68     		ldr	r3, [r7, #4]
 203 0106 214A     		ldr	r2, .L19+16
 204 0108 9342     		cmp	r3, r2
 205 010a 06D1     		bne	.L14
  68:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART5)
 206              		.loc 1 68 4
 207 010c 1C4B     		ldr	r3, .L19+4
 208 010e 1B6C     		ldr	r3, [r3, #64]
 209 0110 1B4A     		ldr	r2, .L19+4
 210 0112 23F40023 		bic	r3, r3, #524288
 211 0116 1364     		str	r3, [r2, #64]
 212              		.loc 1 83 1
 213 0118 2AE0     		b	.L18
 214              	.L14:
  69:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 215              		.loc 1 69 12
 216 011a 7B68     		ldr	r3, [r7, #4]
 217 011c 1C4A     		ldr	r2, .L19+20
 218 011e 9342     		cmp	r3, r2
 219 0120 06D1     		bne	.L15
  71:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == USART6)
 220              		.loc 1 71 4
 221 0122 174B     		ldr	r3, .L19+4
 222 0124 1B6C     		ldr	r3, [r3, #64]
 223 0126 164A     		ldr	r2, .L19+4
 224 0128 23F48013 		bic	r3, r3, #1048576
 225 012c 1364     		str	r3, [r2, #64]
 226              		.loc 1 83 1
 227 012e 1FE0     		b	.L18
 228              	.L15:
  72:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 229              		.loc 1 72 12
 230 0130 7B68     		ldr	r3, [r7, #4]
 231 0132 184A     		ldr	r2, .L19+24
 232 0134 9342     		cmp	r3, r2
 233 0136 06D1     		bne	.L16
  74:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART7)
 234              		.loc 1 74 4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 7


 235 0138 114B     		ldr	r3, .L19+4
 236 013a 5B6C     		ldr	r3, [r3, #68]
 237 013c 104A     		ldr	r2, .L19+4
 238 013e 23F02003 		bic	r3, r3, #32
 239 0142 5364     		str	r3, [r2, #68]
 240              		.loc 1 83 1
 241 0144 14E0     		b	.L18
 242              	.L16:
  75:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 243              		.loc 1 75 12
 244 0146 7B68     		ldr	r3, [r7, #4]
 245 0148 134A     		ldr	r2, .L19+28
 246 014a 9342     		cmp	r3, r2
 247 014c 06D1     		bne	.L17
  77:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (pUSARTx == UART8)
 248              		.loc 1 77 4
 249 014e 0C4B     		ldr	r3, .L19+4
 250 0150 1B6C     		ldr	r3, [r3, #64]
 251 0152 0B4A     		ldr	r2, .L19+4
 252 0154 23F08043 		bic	r3, r3, #1073741824
 253 0158 1364     		str	r3, [r2, #64]
 254              		.loc 1 83 1
 255 015a 09E0     		b	.L18
 256              	.L17:
  78:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 257              		.loc 1 78 12
 258 015c 7B68     		ldr	r3, [r7, #4]
 259 015e 0F4A     		ldr	r2, .L19+32
 260 0160 9342     		cmp	r3, r2
 261 0162 05D1     		bne	.L18
  80:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 262              		.loc 1 80 4
 263 0164 064B     		ldr	r3, .L19+4
 264 0166 1B6C     		ldr	r3, [r3, #64]
 265 0168 054A     		ldr	r2, .L19+4
 266 016a 23F00043 		bic	r3, r3, #-2147483648
 267 016e 1364     		str	r3, [r2, #64]
 268              	.L18:
 269              		.loc 1 83 1
 270 0170 00BF     		nop
 271 0172 0C37     		adds	r7, r7, #12
 272              		.cfi_def_cfa_offset 4
 273 0174 BD46     		mov	sp, r7
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0176 5DF8047B 		ldr	r7, [sp], #4
 277              		.cfi_restore 7
 278              		.cfi_def_cfa_offset 0
 279 017a 7047     		bx	lr
 280              	.L20:
 281              		.align	2
 282              	.L19:
 283 017c 00100140 		.word	1073811456
 284 0180 00380240 		.word	1073887232
 285 0184 00440040 		.word	1073759232
 286 0188 00480040 		.word	1073760256
 287 018c 004C0040 		.word	1073761280
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 8


 288 0190 00500040 		.word	1073762304
 289 0194 00140140 		.word	1073812480
 290 0198 00780040 		.word	1073772544
 291 019c 007C0040 		.word	1073773568
 292              		.cfi_endproc
 293              	.LFE0:
 295              		.section	.text.USART_SetBaudRate,"ax",%progbits
 296              		.align	1
 297              		.global	USART_SetBaudRate
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	USART_SetBaudRate:
 303              	.LFB1:
  84:drivers/Src/stm32f767xx_usart_driver.c **** 
  85:drivers/Src/stm32f767xx_usart_driver.c **** 
  86:drivers/Src/stm32f767xx_usart_driver.c **** /**
  87:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART Set Baud Rate
  88:drivers/Src/stm32f767xx_usart_driver.c ****  * 
  89:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTx 
  90:drivers/Src/stm32f767xx_usart_driver.c ****  * @param BaudRate 
  91:drivers/Src/stm32f767xx_usart_driver.c ****  */
  92:drivers/Src/stm32f767xx_usart_driver.c **** void USART_SetBaudRate(USART_RegDef_t *pUSARTx, uint32_t BaudRate)
  93:drivers/Src/stm32f767xx_usart_driver.c **** {
 304              		.loc 1 93 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 24
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 86B0     		sub	sp, sp, #24
 313              		.cfi_def_cfa_offset 32
 314 0004 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 316 0006 7860     		str	r0, [r7, #4]
 317 0008 3960     		str	r1, [r7]
  94:drivers/Src/stm32f767xx_usart_driver.c ****     //Variable to hold the APB clock
  95:drivers/Src/stm32f767xx_usart_driver.c ****     uint32_t PCLKx;
  96:drivers/Src/stm32f767xx_usart_driver.c **** 
  97:drivers/Src/stm32f767xx_usart_driver.c ****     uint32_t usartdiv;
  98:drivers/Src/stm32f767xx_usart_driver.c **** 
  99:drivers/Src/stm32f767xx_usart_driver.c ****     uint32_t tempreg=0;
 318              		.loc 1 99 14
 319 000a 0023     		movs	r3, #0
 320 000c 3B61     		str	r3, [r7, #16]
 100:drivers/Src/stm32f767xx_usart_driver.c **** 
 101:drivers/Src/stm32f767xx_usart_driver.c ****     //Get the value of APB bus clock in to the variable PCLKx
 102:drivers/Src/stm32f767xx_usart_driver.c ****     if(pUSARTx == USART1 || pUSARTx == USART6)
 321              		.loc 1 102 7
 322 000e 7B68     		ldr	r3, [r7, #4]
 323 0010 1D4A     		ldr	r2, .L27
 324 0012 9342     		cmp	r3, r2
 325 0014 03D0     		beq	.L22
 326              		.loc 1 102 26 discriminator 1
 327 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 9


 328 0018 1C4A     		ldr	r2, .L27+4
 329 001a 9342     		cmp	r3, r2
 330 001c 03D1     		bne	.L23
 331              	.L22:
 103:drivers/Src/stm32f767xx_usart_driver.c ****     {
 104:drivers/Src/stm32f767xx_usart_driver.c ****         //USART1 and USART6 are hanging on APB2 bus
 105:drivers/Src/stm32f767xx_usart_driver.c ****         PCLKx = RCC_GetPCLK2Value();
 332              		.loc 1 105 17
 333 001e FFF7FEFF 		bl	RCC_GetPCLK2Value
 334 0022 7861     		str	r0, [r7, #20]
 335              		.loc 1 105 15
 336 0024 02E0     		b	.L24
 337              	.L23:
 106:drivers/Src/stm32f767xx_usart_driver.c ****     }else
 107:drivers/Src/stm32f767xx_usart_driver.c ****     {
 108:drivers/Src/stm32f767xx_usart_driver.c ****         //USART2,3 and UART4,5,7,8 are hanging on APB1 bus
 109:drivers/Src/stm32f767xx_usart_driver.c ****         PCLKx = RCC_GetPCLK1Value();
 338              		.loc 1 109 17
 339 0026 FFF7FEFF 		bl	RCC_GetPCLK1Value
 340 002a 7861     		str	r0, [r7, #20]
 341              	.L24:
 110:drivers/Src/stm32f767xx_usart_driver.c ****     }
 111:drivers/Src/stm32f767xx_usart_driver.c **** 
 112:drivers/Src/stm32f767xx_usart_driver.c ****     //Check for OVER8 configuration bit
 113:drivers/Src/stm32f767xx_usart_driver.c ****     if(pUSARTx->CR1 & (1 << USART_CR1_OVER8))
 342              		.loc 1 113 15
 343 002c 7B68     		ldr	r3, [r7, #4]
 344 002e 1B68     		ldr	r3, [r3]
 345              		.loc 1 113 21
 346 0030 03F40043 		and	r3, r3, #32768
 347              		.loc 1 113 7
 348 0034 002B     		cmp	r3, #0
 349 0036 18D0     		beq	.L25
 114:drivers/Src/stm32f767xx_usart_driver.c ****     {
 115:drivers/Src/stm32f767xx_usart_driver.c ****         //OVER8 = 1 , over sampling by 8
 116:drivers/Src/stm32f767xx_usart_driver.c ****         usartdiv = (((PCLKx * 2) + (BaudRate / 2)) / BaudRate);     // Rounded up.
 350              		.loc 1 116 29
 351 0038 7B69     		ldr	r3, [r7, #20]
 352 003a 5A00     		lsls	r2, r3, #1
 353              		.loc 1 116 46
 354 003c 3B68     		ldr	r3, [r7]
 355 003e 5B08     		lsrs	r3, r3, #1
 356              		.loc 1 116 34
 357 0040 1A44     		add	r2, r2, r3
 358              		.loc 1 116 18
 359 0042 3B68     		ldr	r3, [r7]
 360 0044 B2FBF3F3 		udiv	r3, r2, r3
 361 0048 FB60     		str	r3, [r7, #12]
 117:drivers/Src/stm32f767xx_usart_driver.c **** 
 118:drivers/Src/stm32f767xx_usart_driver.c ****         tempreg = (uint16_t)(usartdiv & 0xFFF0);                    // BRR[15:4] = USARTDIV[15:4]
 362              		.loc 1 118 19
 363 004a FB68     		ldr	r3, [r7, #12]
 364 004c 9BB2     		uxth	r3, r3
 365 004e 1A46     		mov	r2, r3
 366              		.loc 1 118 17
 367 0050 4FF6F073 		movw	r3, #65520
 368 0054 1340     		ands	r3, r3, r2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 10


 369 0056 3B61     		str	r3, [r7, #16]
 119:drivers/Src/stm32f767xx_usart_driver.c ****         tempreg |= (uint16_t)((usartdiv & (uint16_t)0x000F) >> 1);  // BRR[2:0]  = USARTDIV[3:0] sh
 370              		.loc 1 119 61
 371 0058 FB68     		ldr	r3, [r7, #12]
 372 005a 5B08     		lsrs	r3, r3, #1
 373              		.loc 1 119 20
 374 005c 9BB2     		uxth	r3, r3
 375 005e 03F00703 		and	r3, r3, #7
 376              		.loc 1 119 17
 377 0062 3A69     		ldr	r2, [r7, #16]
 378 0064 1343     		orrs	r3, r3, r2
 379 0066 3B61     		str	r3, [r7, #16]
 380 0068 07E0     		b	.L26
 381              	.L25:
 120:drivers/Src/stm32f767xx_usart_driver.c ****     }
 121:drivers/Src/stm32f767xx_usart_driver.c ****     else
 122:drivers/Src/stm32f767xx_usart_driver.c ****     {
 123:drivers/Src/stm32f767xx_usart_driver.c ****         //over sampling by 16
 124:drivers/Src/stm32f767xx_usart_driver.c ****         tempreg = ((PCLKx + (BaudRate / 2)) / BaudRate); // BRR = USARTDIV. Rounded up.
 382              		.loc 1 124 39
 383 006a 3B68     		ldr	r3, [r7]
 384 006c 5A08     		lsrs	r2, r3, #1
 385              		.loc 1 124 27
 386 006e 7B69     		ldr	r3, [r7, #20]
 387 0070 1A44     		add	r2, r2, r3
 388              		.loc 1 124 17
 389 0072 3B68     		ldr	r3, [r7]
 390 0074 B2FBF3F3 		udiv	r3, r2, r3
 391 0078 3B61     		str	r3, [r7, #16]
 392              	.L26:
 125:drivers/Src/stm32f767xx_usart_driver.c ****     }
 126:drivers/Src/stm32f767xx_usart_driver.c **** 
 127:drivers/Src/stm32f767xx_usart_driver.c ****     //copy the value of tempreg into BRR register
 128:drivers/Src/stm32f767xx_usart_driver.c ****     pUSARTx->BRR = tempreg;
 393              		.loc 1 128 18
 394 007a 7B68     		ldr	r3, [r7, #4]
 395 007c 3A69     		ldr	r2, [r7, #16]
 396 007e DA60     		str	r2, [r3, #12]
 129:drivers/Src/stm32f767xx_usart_driver.c **** }
 397              		.loc 1 129 1
 398 0080 00BF     		nop
 399 0082 1837     		adds	r7, r7, #24
 400              		.cfi_def_cfa_offset 8
 401 0084 BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 0086 80BD     		pop	{r7, pc}
 405              	.L28:
 406              		.align	2
 407              	.L27:
 408 0088 00100140 		.word	1073811456
 409 008c 00140140 		.word	1073812480
 410              		.cfi_endproc
 411              	.LFE1:
 413              		.section	.text.USART_Init,"ax",%progbits
 414              		.align	1
 415              		.global	USART_Init
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 11


 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	USART_Init:
 421              	.LFB2:
 130:drivers/Src/stm32f767xx_usart_driver.c **** 
 131:drivers/Src/stm32f767xx_usart_driver.c **** 
 132:drivers/Src/stm32f767xx_usart_driver.c **** 
 133:drivers/Src/stm32f767xx_usart_driver.c **** /**
 134:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART initialization
 135:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 136:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTHandle 
 137:drivers/Src/stm32f767xx_usart_driver.c ****  */
 138:drivers/Src/stm32f767xx_usart_driver.c **** void USART_Init(USART_Handle_t *pUSARTHandle)
 139:drivers/Src/stm32f767xx_usart_driver.c **** {
 422              		.loc 1 139 1
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 16
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 84B0     		sub	sp, sp, #16
 431              		.cfi_def_cfa_offset 24
 432 0004 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 434 0006 7860     		str	r0, [r7, #4]
 140:drivers/Src/stm32f767xx_usart_driver.c **** 
 141:drivers/Src/stm32f767xx_usart_driver.c **** 	//Temporary variable
 142:drivers/Src/stm32f767xx_usart_driver.c **** 	uint32_t tempreg=0;
 435              		.loc 1 142 11
 436 0008 0023     		movs	r3, #0
 437 000a FB60     		str	r3, [r7, #12]
 143:drivers/Src/stm32f767xx_usart_driver.c **** 
 144:drivers/Src/stm32f767xx_usart_driver.c **** /******************************** Configuration of CR1******************************************/
 145:drivers/Src/stm32f767xx_usart_driver.c **** 
 146:drivers/Src/stm32f767xx_usart_driver.c **** 	// peripheral clock enable
 147:drivers/Src/stm32f767xx_usart_driver.c ****     USART_PeriClockControl(pUSARTHandle->pUSARTx, ENABLE);
 438              		.loc 1 147 5
 439 000c 7B68     		ldr	r3, [r7, #4]
 440 000e 1B68     		ldr	r3, [r3]
 441 0010 0121     		movs	r1, #1
 442 0012 1846     		mov	r0, r3
 443 0014 FFF7FEFF 		bl	USART_PeriClockControl
 148:drivers/Src/stm32f767xx_usart_driver.c **** 
 149:drivers/Src/stm32f767xx_usart_driver.c **** 	//Enable USART Tx and Rx engines according to the USART_Mode configuration item
 150:drivers/Src/stm32f767xx_usart_driver.c **** 	if ( pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_RX)
 444              		.loc 1 150 33
 445 0018 7B68     		ldr	r3, [r7, #4]
 446 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 447              		.loc 1 150 5
 448 001c 012B     		cmp	r3, #1
 449 001e 04D1     		bne	.L30
 151:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 152:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable Receiver bit field 
 153:drivers/Src/stm32f767xx_usart_driver.c **** 		tempreg|= (1 << USART_CR1_RE);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 12


 450              		.loc 1 153 10
 451 0020 FB68     		ldr	r3, [r7, #12]
 452 0022 43F00403 		orr	r3, r3, #4
 453 0026 FB60     		str	r3, [r7, #12]
 454 0028 10E0     		b	.L31
 455              	.L30:
 154:drivers/Src/stm32f767xx_usart_driver.c **** 	}else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_TX)
 456              		.loc 1 154 38
 457 002a 7B68     		ldr	r3, [r7, #4]
 458 002c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 459              		.loc 1 154 11
 460 002e 002B     		cmp	r3, #0
 461 0030 04D1     		bne	.L32
 155:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 156:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable Transmitter bit field 
 157:drivers/Src/stm32f767xx_usart_driver.c **** 		tempreg |= ( 1 << USART_CR1_TE );
 462              		.loc 1 157 11
 463 0032 FB68     		ldr	r3, [r7, #12]
 464 0034 43F00803 		orr	r3, r3, #8
 465 0038 FB60     		str	r3, [r7, #12]
 466 003a 07E0     		b	.L31
 467              	.L32:
 158:drivers/Src/stm32f767xx_usart_driver.c **** 
 159:drivers/Src/stm32f767xx_usart_driver.c **** 	}else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_TXRX)
 468              		.loc 1 159 38
 469 003c 7B68     		ldr	r3, [r7, #4]
 470 003e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 471              		.loc 1 159 11
 472 0040 022B     		cmp	r3, #2
 473 0042 03D1     		bne	.L31
 160:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 161:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable the both Transmitter and Receiver bit fields 
 162:drivers/Src/stm32f767xx_usart_driver.c **** 		tempreg |= ( ( 1 << USART_CR1_RE) | ( 1 << USART_CR1_TE) );
 474              		.loc 1 162 11
 475 0044 FB68     		ldr	r3, [r7, #12]
 476 0046 43F00C03 		orr	r3, r3, #12
 477 004a FB60     		str	r3, [r7, #12]
 478              	.L31:
 163:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 164:drivers/Src/stm32f767xx_usart_driver.c **** 
 165:drivers/Src/stm32f767xx_usart_driver.c ****     // configure the Word length
 166:drivers/Src/stm32f767xx_usart_driver.c **** 	tempreg |= pUSARTHandle->USART_Config.USART_WordLength << USART_CR1_M0 ;
 479              		.loc 1 166 39
 480 004c 7B68     		ldr	r3, [r7, #4]
 481 004e 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 482              		.loc 1 166 57
 483 0050 1B03     		lsls	r3, r3, #12
 484 0052 1A46     		mov	r2, r3
 485              		.loc 1 166 10
 486 0054 FB68     		ldr	r3, [r7, #12]
 487 0056 1343     		orrs	r3, r3, r2
 488 0058 FB60     		str	r3, [r7, #12]
 167:drivers/Src/stm32f767xx_usart_driver.c **** 
 168:drivers/Src/stm32f767xx_usart_driver.c **** 
 169:drivers/Src/stm32f767xx_usart_driver.c ****     //Configuration of parity control bit fields
 170:drivers/Src/stm32f767xx_usart_driver.c **** 	if ( pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_EVEN)
 489              		.loc 1 170 33
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 13


 490 005a 7B68     		ldr	r3, [r7, #4]
 491 005c 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 492              		.loc 1 170 5
 493 005e 012B     		cmp	r3, #1
 494 0060 04D1     		bne	.L33
 171:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 172:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable the parity control 
 173:drivers/Src/stm32f767xx_usart_driver.c **** 		tempreg |= ( 1 << USART_CR1_PCE);
 495              		.loc 1 173 11
 496 0062 FB68     		ldr	r3, [r7, #12]
 497 0064 43F48063 		orr	r3, r3, #1024
 498 0068 FB60     		str	r3, [r7, #12]
 499 006a 0BE0     		b	.L34
 500              	.L33:
 174:drivers/Src/stm32f767xx_usart_driver.c **** 
 175:drivers/Src/stm32f767xx_usart_driver.c **** 		//EVEN parity is default
 176:drivers/Src/stm32f767xx_usart_driver.c **** 
 177:drivers/Src/stm32f767xx_usart_driver.c **** 	}else if (pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_ODD )
 501              		.loc 1 177 38
 502 006c 7B68     		ldr	r3, [r7, #4]
 503 006e 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 504              		.loc 1 177 11
 505 0070 022B     		cmp	r3, #2
 506 0072 07D1     		bne	.L34
 178:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 179:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable the parity control 
 180:drivers/Src/stm32f767xx_usart_driver.c **** 	    tempreg |= ( 1 << USART_CR1_PCE);
 507              		.loc 1 180 14
 508 0074 FB68     		ldr	r3, [r7, #12]
 509 0076 43F48063 		orr	r3, r3, #1024
 510 007a FB60     		str	r3, [r7, #12]
 181:drivers/Src/stm32f767xx_usart_driver.c **** 
 182:drivers/Src/stm32f767xx_usart_driver.c **** 	    // enable ODD parity 
 183:drivers/Src/stm32f767xx_usart_driver.c **** 	    tempreg |= ( 1 << USART_CR1_PS);
 511              		.loc 1 183 14
 512 007c FB68     		ldr	r3, [r7, #12]
 513 007e 43F40073 		orr	r3, r3, #512
 514 0082 FB60     		str	r3, [r7, #12]
 515              	.L34:
 184:drivers/Src/stm32f767xx_usart_driver.c **** 
 185:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 186:drivers/Src/stm32f767xx_usart_driver.c **** 
 187:drivers/Src/stm32f767xx_usart_driver.c **** 	pUSARTHandle->pUSARTx->CR1 = tempreg;
 516              		.loc 1 187 14
 517 0084 7B68     		ldr	r3, [r7, #4]
 518 0086 1B68     		ldr	r3, [r3]
 519              		.loc 1 187 29
 520 0088 FA68     		ldr	r2, [r7, #12]
 521 008a 1A60     		str	r2, [r3]
 188:drivers/Src/stm32f767xx_usart_driver.c **** 
 189:drivers/Src/stm32f767xx_usart_driver.c **** /******************************** Configuration of CR2******************************************/
 190:drivers/Src/stm32f767xx_usart_driver.c **** 
 191:drivers/Src/stm32f767xx_usart_driver.c **** 	tempreg=0;
 522              		.loc 1 191 9
 523 008c 0023     		movs	r3, #0
 524 008e FB60     		str	r3, [r7, #12]
 192:drivers/Src/stm32f767xx_usart_driver.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 14


 193:drivers/Src/stm32f767xx_usart_driver.c **** 	// configure the number of stop bits inserted during USART frame transmission 
 194:drivers/Src/stm32f767xx_usart_driver.c **** 	tempreg |= pUSARTHandle->USART_Config.USART_NoOfStopBits << USART_CR2_STOP;
 525              		.loc 1 194 39
 526 0090 7B68     		ldr	r3, [r7, #4]
 527 0092 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 528              		.loc 1 194 59
 529 0094 1B03     		lsls	r3, r3, #12
 530 0096 1A46     		mov	r2, r3
 531              		.loc 1 194 10
 532 0098 FB68     		ldr	r3, [r7, #12]
 533 009a 1343     		orrs	r3, r3, r2
 534 009c FB60     		str	r3, [r7, #12]
 195:drivers/Src/stm32f767xx_usart_driver.c **** 
 196:drivers/Src/stm32f767xx_usart_driver.c **** 	pUSARTHandle->pUSARTx->CR2 = tempreg;
 535              		.loc 1 196 14
 536 009e 7B68     		ldr	r3, [r7, #4]
 537 00a0 1B68     		ldr	r3, [r3]
 538              		.loc 1 196 29
 539 00a2 FA68     		ldr	r2, [r7, #12]
 540 00a4 5A60     		str	r2, [r3, #4]
 197:drivers/Src/stm32f767xx_usart_driver.c **** 
 198:drivers/Src/stm32f767xx_usart_driver.c **** /******************************** Configuration of CR3******************************************/
 199:drivers/Src/stm32f767xx_usart_driver.c **** 
 200:drivers/Src/stm32f767xx_usart_driver.c **** 	tempreg=0;
 541              		.loc 1 200 9
 542 00a6 0023     		movs	r3, #0
 543 00a8 FB60     		str	r3, [r7, #12]
 201:drivers/Src/stm32f767xx_usart_driver.c **** 	
 202:drivers/Src/stm32f767xx_usart_driver.c **** 	//Configuration of USART hardware flow control 
 203:drivers/Src/stm32f767xx_usart_driver.c **** 	if ( pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS)
 544              		.loc 1 203 33
 545 00aa 7B68     		ldr	r3, [r7, #4]
 546 00ac DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 547              		.loc 1 203 5
 548 00ae 012B     		cmp	r3, #1
 549 00b0 04D1     		bne	.L35
 204:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 205:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable CTS flow control 
 206:drivers/Src/stm32f767xx_usart_driver.c **** 		tempreg |= ( 1 << USART_CR3_CTSE);
 550              		.loc 1 206 11
 551 00b2 FB68     		ldr	r3, [r7, #12]
 552 00b4 43F40073 		orr	r3, r3, #512
 553 00b8 FB60     		str	r3, [r7, #12]
 554 00ba 10E0     		b	.L36
 555              	.L35:
 207:drivers/Src/stm32f767xx_usart_driver.c **** 
 208:drivers/Src/stm32f767xx_usart_driver.c **** 
 209:drivers/Src/stm32f767xx_usart_driver.c **** 	}else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_RTS)
 556              		.loc 1 209 38
 557 00bc 7B68     		ldr	r3, [r7, #4]
 558 00be DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 559              		.loc 1 209 11
 560 00c0 022B     		cmp	r3, #2
 561 00c2 04D1     		bne	.L37
 210:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 211:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable RTS flow control 
 212:drivers/Src/stm32f767xx_usart_driver.c **** 		tempreg |= ( 1 << USART_CR3_RTSE);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 15


 562              		.loc 1 212 11
 563 00c4 FB68     		ldr	r3, [r7, #12]
 564 00c6 43F48073 		orr	r3, r3, #256
 565 00ca FB60     		str	r3, [r7, #12]
 566 00cc 07E0     		b	.L36
 567              	.L37:
 213:drivers/Src/stm32f767xx_usart_driver.c **** 
 214:drivers/Src/stm32f767xx_usart_driver.c **** 	}else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS_RTS)
 568              		.loc 1 214 38
 569 00ce 7B68     		ldr	r3, [r7, #4]
 570 00d0 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 571              		.loc 1 214 11
 572 00d2 032B     		cmp	r3, #3
 573 00d4 03D1     		bne	.L36
 215:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 216:drivers/Src/stm32f767xx_usart_driver.c **** 		// enable both CTS and RTS Flow control 
 217:drivers/Src/stm32f767xx_usart_driver.c **** 		tempreg |= ( ( 1 << USART_CR3_CTSE) | ( 1 << USART_CR3_RTSE) );
 574              		.loc 1 217 11
 575 00d6 FB68     		ldr	r3, [r7, #12]
 576 00d8 43F44073 		orr	r3, r3, #768
 577 00dc FB60     		str	r3, [r7, #12]
 578              	.L36:
 218:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 219:drivers/Src/stm32f767xx_usart_driver.c **** 
 220:drivers/Src/stm32f767xx_usart_driver.c **** 
 221:drivers/Src/stm32f767xx_usart_driver.c **** 	pUSARTHandle->pUSARTx->CR3 = tempreg;
 579              		.loc 1 221 14
 580 00de 7B68     		ldr	r3, [r7, #4]
 581 00e0 1B68     		ldr	r3, [r3]
 582              		.loc 1 221 29
 583 00e2 FA68     		ldr	r2, [r7, #12]
 584 00e4 9A60     		str	r2, [r3, #8]
 222:drivers/Src/stm32f767xx_usart_driver.c **** 
 223:drivers/Src/stm32f767xx_usart_driver.c **** /******************************** Configuration of BRR(Baudrate register)**************************
 224:drivers/Src/stm32f767xx_usart_driver.c **** 
 225:drivers/Src/stm32f767xx_usart_driver.c **** 	USART_SetBaudRate(pUSARTHandle->pUSARTx,pUSARTHandle->USART_Config.USART_Baud);
 585              		.loc 1 225 2
 586 00e6 7B68     		ldr	r3, [r7, #4]
 587 00e8 1A68     		ldr	r2, [r3]
 588 00ea 7B68     		ldr	r3, [r7, #4]
 589 00ec 9B68     		ldr	r3, [r3, #8]
 590 00ee 1946     		mov	r1, r3
 591 00f0 1046     		mov	r0, r2
 592 00f2 FFF7FEFF 		bl	USART_SetBaudRate
 226:drivers/Src/stm32f767xx_usart_driver.c **** 
 227:drivers/Src/stm32f767xx_usart_driver.c **** }
 593              		.loc 1 227 1
 594 00f6 00BF     		nop
 595 00f8 1037     		adds	r7, r7, #16
 596              		.cfi_def_cfa_offset 8
 597 00fa BD46     		mov	sp, r7
 598              		.cfi_def_cfa_register 13
 599              		@ sp needed
 600 00fc 80BD     		pop	{r7, pc}
 601              		.cfi_endproc
 602              	.LFE2:
 604              		.section	.text.USART_DeInit,"ax",%progbits
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 16


 605              		.align	1
 606              		.global	USART_DeInit
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 611              	USART_DeInit:
 612              	.LFB3:
 228:drivers/Src/stm32f767xx_usart_driver.c **** 
 229:drivers/Src/stm32f767xx_usart_driver.c **** 
 230:drivers/Src/stm32f767xx_usart_driver.c **** /**
 231:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief TODO
 232:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 233:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTx 
 234:drivers/Src/stm32f767xx_usart_driver.c ****  */
 235:drivers/Src/stm32f767xx_usart_driver.c **** void USART_DeInit(USART_RegDef_t *pUSARTx)
 236:drivers/Src/stm32f767xx_usart_driver.c **** {
 613              		.loc 1 236 1
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618 0000 80B4     		push	{r7}
 619              		.cfi_def_cfa_offset 4
 620              		.cfi_offset 7, -4
 621 0002 83B0     		sub	sp, sp, #12
 622              		.cfi_def_cfa_offset 16
 623 0004 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 625 0006 7860     		str	r0, [r7, #4]
 237:drivers/Src/stm32f767xx_usart_driver.c ****     // TODO
 238:drivers/Src/stm32f767xx_usart_driver.c **** }
 626              		.loc 1 238 1
 627 0008 00BF     		nop
 628 000a 0C37     		adds	r7, r7, #12
 629              		.cfi_def_cfa_offset 4
 630 000c BD46     		mov	sp, r7
 631              		.cfi_def_cfa_register 13
 632              		@ sp needed
 633 000e 5DF8047B 		ldr	r7, [sp], #4
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 0012 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE3:
 640              		.section	.text.USART_PeripheralControl,"ax",%progbits
 641              		.align	1
 642              		.global	USART_PeripheralControl
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	USART_PeripheralControl:
 648              	.LFB4:
 239:drivers/Src/stm32f767xx_usart_driver.c **** 
 240:drivers/Src/stm32f767xx_usart_driver.c **** /**
 241:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART Peripheral Enable / Disable
 242:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 243:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTx 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 17


 244:drivers/Src/stm32f767xx_usart_driver.c ****  * @param EnOrDi 
 245:drivers/Src/stm32f767xx_usart_driver.c ****  */
 246:drivers/Src/stm32f767xx_usart_driver.c **** void USART_PeripheralControl(USART_RegDef_t *pUSARTx, uint8_t EnOrDi)
 247:drivers/Src/stm32f767xx_usart_driver.c **** {
 649              		.loc 1 247 1
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 654 0000 80B4     		push	{r7}
 655              		.cfi_def_cfa_offset 4
 656              		.cfi_offset 7, -4
 657 0002 83B0     		sub	sp, sp, #12
 658              		.cfi_def_cfa_offset 16
 659 0004 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 661 0006 7860     		str	r0, [r7, #4]
 662 0008 0B46     		mov	r3, r1
 663 000a FB70     		strb	r3, [r7, #3]
 248:drivers/Src/stm32f767xx_usart_driver.c ****     if(EnOrDi == ENABLE)
 664              		.loc 1 248 7
 665 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 666 000e 012B     		cmp	r3, #1
 667 0010 06D1     		bne	.L40
 249:drivers/Src/stm32f767xx_usart_driver.c ****     {
 250:drivers/Src/stm32f767xx_usart_driver.c ****         pUSARTx->CR1 |= (1 << USART_CR1_UE); // set UE (bit #0)
 668              		.loc 1 250 22
 669 0012 7B68     		ldr	r3, [r7, #4]
 670 0014 1B68     		ldr	r3, [r3]
 671 0016 43F00102 		orr	r2, r3, #1
 672 001a 7B68     		ldr	r3, [r7, #4]
 673 001c 1A60     		str	r2, [r3]
 251:drivers/Src/stm32f767xx_usart_driver.c ****     }else
 252:drivers/Src/stm32f767xx_usart_driver.c ****     {
 253:drivers/Src/stm32f767xx_usart_driver.c ****         pUSARTx->CR1 &= ~(1 << USART_CR1_UE); // reset bit
 254:drivers/Src/stm32f767xx_usart_driver.c ****     }
 255:drivers/Src/stm32f767xx_usart_driver.c **** }
 674              		.loc 1 255 1
 675 001e 05E0     		b	.L42
 676              	.L40:
 253:drivers/Src/stm32f767xx_usart_driver.c ****     }
 677              		.loc 1 253 22
 678 0020 7B68     		ldr	r3, [r7, #4]
 679 0022 1B68     		ldr	r3, [r3]
 680 0024 23F00102 		bic	r2, r3, #1
 681 0028 7B68     		ldr	r3, [r7, #4]
 682 002a 1A60     		str	r2, [r3]
 683              	.L42:
 684              		.loc 1 255 1
 685 002c 00BF     		nop
 686 002e 0C37     		adds	r7, r7, #12
 687              		.cfi_def_cfa_offset 4
 688 0030 BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0032 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 18


 693              		.cfi_def_cfa_offset 0
 694 0036 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE4:
 698              		.section	.text.USART_GetFlagStatus,"ax",%progbits
 699              		.align	1
 700              		.global	USART_GetFlagStatus
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	USART_GetFlagStatus:
 706              	.LFB5:
 256:drivers/Src/stm32f767xx_usart_driver.c **** 
 257:drivers/Src/stm32f767xx_usart_driver.c **** 
 258:drivers/Src/stm32f767xx_usart_driver.c **** /**
 259:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief 
 260:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 261:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTx 
 262:drivers/Src/stm32f767xx_usart_driver.c ****  * @param FlagName 
 263:drivers/Src/stm32f767xx_usart_driver.c ****  * @return uint8_t 
 264:drivers/Src/stm32f767xx_usart_driver.c ****  */
 265:drivers/Src/stm32f767xx_usart_driver.c **** uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx , uint32_t FlagName)
 266:drivers/Src/stm32f767xx_usart_driver.c **** {
 707              		.loc 1 266 1
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 8
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712 0000 80B4     		push	{r7}
 713              		.cfi_def_cfa_offset 4
 714              		.cfi_offset 7, -4
 715 0002 83B0     		sub	sp, sp, #12
 716              		.cfi_def_cfa_offset 16
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 720 0008 3960     		str	r1, [r7]
 267:drivers/Src/stm32f767xx_usart_driver.c ****     if(pUSARTx->ISR & FlagName)
 721              		.loc 1 267 15
 722 000a 7B68     		ldr	r3, [r7, #4]
 723 000c DA69     		ldr	r2, [r3, #28]
 724              		.loc 1 267 21
 725 000e 3B68     		ldr	r3, [r7]
 726 0010 1340     		ands	r3, r3, r2
 727              		.loc 1 267 7
 728 0012 002B     		cmp	r3, #0
 729 0014 01D0     		beq	.L44
 268:drivers/Src/stm32f767xx_usart_driver.c ****     {
 269:drivers/Src/stm32f767xx_usart_driver.c ****         return FLAG_SET;
 730              		.loc 1 269 16
 731 0016 0123     		movs	r3, #1
 732 0018 00E0     		b	.L45
 733              	.L44:
 270:drivers/Src/stm32f767xx_usart_driver.c ****     }
 271:drivers/Src/stm32f767xx_usart_driver.c ****     return FLAG_RESET;    
 734              		.loc 1 271 12
 735 001a 0023     		movs	r3, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 19


 736              	.L45:
 272:drivers/Src/stm32f767xx_usart_driver.c **** }
 737              		.loc 1 272 1
 738 001c 1846     		mov	r0, r3
 739 001e 0C37     		adds	r7, r7, #12
 740              		.cfi_def_cfa_offset 4
 741 0020 BD46     		mov	sp, r7
 742              		.cfi_def_cfa_register 13
 743              		@ sp needed
 744 0022 5DF8047B 		ldr	r7, [sp], #4
 745              		.cfi_restore 7
 746              		.cfi_def_cfa_offset 0
 747 0026 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE5:
 751              		.section	.text.USART_ClearFlag,"ax",%progbits
 752              		.align	1
 753              		.global	USART_ClearFlag
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 758              	USART_ClearFlag:
 759              	.LFB6:
 273:drivers/Src/stm32f767xx_usart_driver.c **** 
 274:drivers/Src/stm32f767xx_usart_driver.c **** /**
 275:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief 
 276:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 277:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTx 
 278:drivers/Src/stm32f767xx_usart_driver.c ****  * @param StatusFlagName 
 279:drivers/Src/stm32f767xx_usart_driver.c ****  */
 280:drivers/Src/stm32f767xx_usart_driver.c **** void USART_ClearFlag(USART_RegDef_t *pUSARTx, uint16_t StatusFlagName)
 281:drivers/Src/stm32f767xx_usart_driver.c **** {
 760              		.loc 1 281 1
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 8
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765 0000 80B4     		push	{r7}
 766              		.cfi_def_cfa_offset 4
 767              		.cfi_offset 7, -4
 768 0002 83B0     		sub	sp, sp, #12
 769              		.cfi_def_cfa_offset 16
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 772 0006 7860     		str	r0, [r7, #4]
 773 0008 0B46     		mov	r3, r1
 774 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 282:drivers/Src/stm32f767xx_usart_driver.c **** 	// TODO
 283:drivers/Src/stm32f767xx_usart_driver.c **** 
 284:drivers/Src/stm32f767xx_usart_driver.c **** }
 775              		.loc 1 284 1
 776 000c 00BF     		nop
 777 000e 0C37     		adds	r7, r7, #12
 778              		.cfi_def_cfa_offset 4
 779 0010 BD46     		mov	sp, r7
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 20


 782 0012 5DF8047B 		ldr	r7, [sp], #4
 783              		.cfi_restore 7
 784              		.cfi_def_cfa_offset 0
 785 0016 7047     		bx	lr
 786              		.cfi_endproc
 787              	.LFE6:
 789              		.section	.text.USART_SendData,"ax",%progbits
 790              		.align	1
 791              		.global	USART_SendData
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	USART_SendData:
 797              	.LFB7:
 285:drivers/Src/stm32f767xx_usart_driver.c **** 
 286:drivers/Src/stm32f767xx_usart_driver.c **** 
 287:drivers/Src/stm32f767xx_usart_driver.c **** 
 288:drivers/Src/stm32f767xx_usart_driver.c **** /**
 289:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART Send Data
 290:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 291:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTHandle 
 292:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pTxBuffer 
 293:drivers/Src/stm32f767xx_usart_driver.c ****  * @param Len 
 294:drivers/Src/stm32f767xx_usart_driver.c ****  */
 295:drivers/Src/stm32f767xx_usart_driver.c **** void USART_SendData(USART_Handle_t *pUSARTHandle, uint8_t *pTxBuffer, uint32_t Len)
 296:drivers/Src/stm32f767xx_usart_driver.c **** {
 798              		.loc 1 296 1
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 24
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 86B0     		sub	sp, sp, #24
 807              		.cfi_def_cfa_offset 32
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 F860     		str	r0, [r7, #12]
 811 0008 B960     		str	r1, [r7, #8]
 812 000a 7A60     		str	r2, [r7, #4]
 813              	.LBB2:
 297:drivers/Src/stm32f767xx_usart_driver.c **** 
 298:drivers/Src/stm32f767xx_usart_driver.c **** 	uint16_t *pdata;
 299:drivers/Src/stm32f767xx_usart_driver.c ****    //Loop over until "Len" number of bytes are transferred
 300:drivers/Src/stm32f767xx_usart_driver.c **** 	for(uint32_t i = 0 ; i < Len; i++)
 814              		.loc 1 300 15
 815 000c 0023     		movs	r3, #0
 816 000e 7B61     		str	r3, [r7, #20]
 817              		.loc 1 300 2
 818 0010 31E0     		b	.L48
 819              	.L53:
 301:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 302:drivers/Src/stm32f767xx_usart_driver.c **** 		//wait until TXE flag is set in the ISR
 303:drivers/Src/stm32f767xx_usart_driver.c **** 		while(! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_TXE));
 820              		.loc 1 303 8
 821 0012 00BF     		nop
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 21


 822              	.L49:
 823              		.loc 1 303 11 discriminator 1
 824 0014 FB68     		ldr	r3, [r7, #12]
 825 0016 1B68     		ldr	r3, [r3]
 826 0018 8021     		movs	r1, #128
 827 001a 1846     		mov	r0, r3
 828 001c FFF7FEFF 		bl	USART_GetFlagStatus
 829 0020 0346     		mov	r3, r0
 830              		.loc 1 303 9 discriminator 1
 831 0022 002B     		cmp	r3, #0
 832 0024 F6D0     		beq	.L49
 304:drivers/Src/stm32f767xx_usart_driver.c **** 
 305:drivers/Src/stm32f767xx_usart_driver.c ****          //Check the USART_WordLength item for 9BIT or 8BIT in a frame
 306:drivers/Src/stm32f767xx_usart_driver.c **** 		if(pUSARTHandle->USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 833              		.loc 1 306 32
 834 0026 FB68     		ldr	r3, [r7, #12]
 835 0028 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 836              		.loc 1 306 5
 837 002a 012B     		cmp	r3, #1
 838 002c 18D1     		bne	.L50
 307:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 308:drivers/Src/stm32f767xx_usart_driver.c **** 			//if 9BIT, load the DR with 2bytes masking the bits other than first 9 bits 
 309:drivers/Src/stm32f767xx_usart_driver.c **** 			pdata = (uint16_t*) pTxBuffer;
 839              		.loc 1 309 10
 840 002e BB68     		ldr	r3, [r7, #8]
 841 0030 3B61     		str	r3, [r7, #16]
 310:drivers/Src/stm32f767xx_usart_driver.c **** 			pUSARTHandle->pUSARTx->TDR = (*pdata & (uint16_t)0x01FF);
 842              		.loc 1 310 34
 843 0032 3B69     		ldr	r3, [r7, #16]
 844 0034 1B88     		ldrh	r3, [r3]
 845              		.loc 1 310 41
 846 0036 1A46     		mov	r2, r3
 847              		.loc 1 310 16
 848 0038 FB68     		ldr	r3, [r7, #12]
 849 003a 1B68     		ldr	r3, [r3]
 850              		.loc 1 310 41
 851 003c C2F30802 		ubfx	r2, r2, #0, #9
 852              		.loc 1 310 31
 853 0040 9A62     		str	r2, [r3, #40]
 311:drivers/Src/stm32f767xx_usart_driver.c **** 			
 312:drivers/Src/stm32f767xx_usart_driver.c **** 			//check for USART_ParityControl
 313:drivers/Src/stm32f767xx_usart_driver.c **** 			if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 854              		.loc 1 313 33
 855 0042 FB68     		ldr	r3, [r7, #12]
 856 0044 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 857              		.loc 1 313 6
 858 0046 002B     		cmp	r3, #0
 859 0048 06D1     		bne	.L51
 314:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 315:drivers/Src/stm32f767xx_usart_driver.c **** 				//No parity is used in this transfer. so, 9bits of user data will be sent
 316:drivers/Src/stm32f767xx_usart_driver.c **** 				//increment pTxBuffer twice 
 317:drivers/Src/stm32f767xx_usart_driver.c **** 				pTxBuffer++;
 860              		.loc 1 317 14
 861 004a BB68     		ldr	r3, [r7, #8]
 862 004c 0133     		adds	r3, r3, #1
 863 004e BB60     		str	r3, [r7, #8]
 318:drivers/Src/stm32f767xx_usart_driver.c **** 				pTxBuffer++;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 22


 864              		.loc 1 318 14
 865 0050 BB68     		ldr	r3, [r7, #8]
 866 0052 0133     		adds	r3, r3, #1
 867 0054 BB60     		str	r3, [r7, #8]
 868 0056 0BE0     		b	.L52
 869              	.L51:
 319:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 320:drivers/Src/stm32f767xx_usart_driver.c **** 			else
 321:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 322:drivers/Src/stm32f767xx_usart_driver.c **** 				//Parity bit is used in this transfer . so , 8bits of user data will be sent
 323:drivers/Src/stm32f767xx_usart_driver.c **** 				//The 9th bit will be replaced by parity bit by the hardware
 324:drivers/Src/stm32f767xx_usart_driver.c **** 				pTxBuffer++;
 870              		.loc 1 324 14
 871 0058 BB68     		ldr	r3, [r7, #8]
 872 005a 0133     		adds	r3, r3, #1
 873 005c BB60     		str	r3, [r7, #8]
 874 005e 07E0     		b	.L52
 875              	.L50:
 325:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 326:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 327:drivers/Src/stm32f767xx_usart_driver.c **** 		else
 328:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 329:drivers/Src/stm32f767xx_usart_driver.c **** 			//8-bit data transfer 
 330:drivers/Src/stm32f767xx_usart_driver.c **** 			pUSARTHandle->pUSARTx->TDR = (*pTxBuffer  & (uint8_t)0xFF);
 876              		.loc 1 330 34
 877 0060 BB68     		ldr	r3, [r7, #8]
 878 0062 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 879              		.loc 1 330 16
 880 0064 FB68     		ldr	r3, [r7, #12]
 881 0066 1B68     		ldr	r3, [r3]
 882              		.loc 1 330 31
 883 0068 9A62     		str	r2, [r3, #40]
 331:drivers/Src/stm32f767xx_usart_driver.c **** 			
 332:drivers/Src/stm32f767xx_usart_driver.c **** 			//increment the buffer address
 333:drivers/Src/stm32f767xx_usart_driver.c **** 			pTxBuffer++;
 884              		.loc 1 333 13
 885 006a BB68     		ldr	r3, [r7, #8]
 886 006c 0133     		adds	r3, r3, #1
 887 006e BB60     		str	r3, [r7, #8]
 888              	.L52:
 300:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 889              		.loc 1 300 33 discriminator 2
 890 0070 7B69     		ldr	r3, [r7, #20]
 891 0072 0133     		adds	r3, r3, #1
 892 0074 7B61     		str	r3, [r7, #20]
 893              	.L48:
 300:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 894              		.loc 1 300 25 discriminator 1
 895 0076 7A69     		ldr	r2, [r7, #20]
 896 0078 7B68     		ldr	r3, [r7, #4]
 897 007a 9A42     		cmp	r2, r3
 898 007c C9D3     		bcc	.L53
 899              	.LBE2:
 334:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 335:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 336:drivers/Src/stm32f767xx_usart_driver.c **** 
 337:drivers/Src/stm32f767xx_usart_driver.c **** 	//wait until TC flag is set in the ISR
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 23


 338:drivers/Src/stm32f767xx_usart_driver.c **** 	while( ! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_TC));
 900              		.loc 1 338 7
 901 007e 00BF     		nop
 902              	.L54:
 903              		.loc 1 338 11 discriminator 1
 904 0080 FB68     		ldr	r3, [r7, #12]
 905 0082 1B68     		ldr	r3, [r3]
 906 0084 4021     		movs	r1, #64
 907 0086 1846     		mov	r0, r3
 908 0088 FFF7FEFF 		bl	USART_GetFlagStatus
 909 008c 0346     		mov	r3, r0
 910              		.loc 1 338 9 discriminator 1
 911 008e 002B     		cmp	r3, #0
 912 0090 F6D0     		beq	.L54
 339:drivers/Src/stm32f767xx_usart_driver.c **** }
 913              		.loc 1 339 1
 914 0092 00BF     		nop
 915 0094 00BF     		nop
 916 0096 1837     		adds	r7, r7, #24
 917              		.cfi_def_cfa_offset 8
 918 0098 BD46     		mov	sp, r7
 919              		.cfi_def_cfa_register 13
 920              		@ sp needed
 921 009a 80BD     		pop	{r7, pc}
 922              		.cfi_endproc
 923              	.LFE7:
 925              		.section	.text.USART_ReceiveData,"ax",%progbits
 926              		.align	1
 927              		.global	USART_ReceiveData
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 932              	USART_ReceiveData:
 933              	.LFB8:
 340:drivers/Src/stm32f767xx_usart_driver.c **** 
 341:drivers/Src/stm32f767xx_usart_driver.c **** 
 342:drivers/Src/stm32f767xx_usart_driver.c **** /**
 343:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART Receive Data
 344:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 345:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTHandle 
 346:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pRxBuffer 
 347:drivers/Src/stm32f767xx_usart_driver.c ****  * @param Len 
 348:drivers/Src/stm32f767xx_usart_driver.c ****  */
 349:drivers/Src/stm32f767xx_usart_driver.c **** void USART_ReceiveData(USART_Handle_t *pUSARTHandle, uint8_t *pRxBuffer, uint32_t Len)
 350:drivers/Src/stm32f767xx_usart_driver.c **** {
 934              		.loc 1 350 1
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 24
 937              		@ frame_needed = 1, uses_anonymous_args = 0
 938 0000 80B5     		push	{r7, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 86B0     		sub	sp, sp, #24
 943              		.cfi_def_cfa_offset 32
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 24


 946 0006 F860     		str	r0, [r7, #12]
 947 0008 B960     		str	r1, [r7, #8]
 948 000a 7A60     		str	r2, [r7, #4]
 949              	.LBB3:
 351:drivers/Src/stm32f767xx_usart_driver.c ****    //Loop over until "Len" number of bytes are transferred
 352:drivers/Src/stm32f767xx_usart_driver.c **** 	for(uint32_t i = 0 ; i < Len; i++)
 950              		.loc 1 352 15
 951 000c 0023     		movs	r3, #0
 952 000e 7B61     		str	r3, [r7, #20]
 953              		.loc 1 352 2
 954 0010 45E0     		b	.L56
 955              	.L63:
 353:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 354:drivers/Src/stm32f767xx_usart_driver.c **** 		//wait until RXNE flag is set in the ISR
 355:drivers/Src/stm32f767xx_usart_driver.c **** 		while( ! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_RXNE));
 956              		.loc 1 355 8
 957 0012 00BF     		nop
 958              	.L57:
 959              		.loc 1 355 12 discriminator 1
 960 0014 FB68     		ldr	r3, [r7, #12]
 961 0016 1B68     		ldr	r3, [r3]
 962 0018 2021     		movs	r1, #32
 963 001a 1846     		mov	r0, r3
 964 001c FFF7FEFF 		bl	USART_GetFlagStatus
 965 0020 0346     		mov	r3, r0
 966              		.loc 1 355 10 discriminator 1
 967 0022 002B     		cmp	r3, #0
 968 0024 F6D0     		beq	.L57
 356:drivers/Src/stm32f767xx_usart_driver.c **** 
 357:drivers/Src/stm32f767xx_usart_driver.c **** 		//Check the USART_WordLength to decide whether we are going to receive 9bit of data in a frame or
 358:drivers/Src/stm32f767xx_usart_driver.c **** 		if(pUSARTHandle->USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 969              		.loc 1 358 32
 970 0026 FB68     		ldr	r3, [r7, #12]
 971 0028 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 972              		.loc 1 358 5
 973 002a 012B     		cmp	r3, #1
 974 002c 1DD1     		bne	.L58
 359:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 360:drivers/Src/stm32f767xx_usart_driver.c **** 			//We are going to receive 9bit data in a frame
 361:drivers/Src/stm32f767xx_usart_driver.c **** 
 362:drivers/Src/stm32f767xx_usart_driver.c **** 			//check are we using USART_ParityControl control or not
 363:drivers/Src/stm32f767xx_usart_driver.c **** 			if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 975              		.loc 1 363 33
 976 002e FB68     		ldr	r3, [r7, #12]
 977 0030 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 978              		.loc 1 363 6
 979 0032 002B     		cmp	r3, #0
 980 0034 0FD1     		bne	.L59
 364:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 365:drivers/Src/stm32f767xx_usart_driver.c **** 				//No parity is used. so, all 9bits will be of user data
 366:drivers/Src/stm32f767xx_usart_driver.c **** 
 367:drivers/Src/stm32f767xx_usart_driver.c **** 				//read only first 9 bits. so, mask the DR with 0x01FF
 368:drivers/Src/stm32f767xx_usart_driver.c **** 				*((uint16_t*) pRxBuffer) = (pUSARTHandle->pUSARTx->RDR  & (uint16_t)0x01FF);
 981              		.loc 1 368 45
 982 0036 FB68     		ldr	r3, [r7, #12]
 983 0038 1B68     		ldr	r3, [r3]
 984              		.loc 1 368 54
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 25


 985 003a 5B6A     		ldr	r3, [r3, #36]
 986              		.loc 1 368 61
 987 003c 9BB2     		uxth	r3, r3
 988 003e C3F30803 		ubfx	r3, r3, #0, #9
 989 0042 9AB2     		uxth	r2, r3
 990              		.loc 1 368 30
 991 0044 BB68     		ldr	r3, [r7, #8]
 992 0046 1A80     		strh	r2, [r3]	@ movhi
 369:drivers/Src/stm32f767xx_usart_driver.c **** 
 370:drivers/Src/stm32f767xx_usart_driver.c **** 				//Now increment the pRxBuffer two times
 371:drivers/Src/stm32f767xx_usart_driver.c **** 				pRxBuffer++;
 993              		.loc 1 371 14
 994 0048 BB68     		ldr	r3, [r7, #8]
 995 004a 0133     		adds	r3, r3, #1
 996 004c BB60     		str	r3, [r7, #8]
 372:drivers/Src/stm32f767xx_usart_driver.c ****                 pRxBuffer++;
 997              		.loc 1 372 26
 998 004e BB68     		ldr	r3, [r7, #8]
 999 0050 0133     		adds	r3, r3, #1
 1000 0052 BB60     		str	r3, [r7, #8]
 1001 0054 20E0     		b	.L60
 1002              	.L59:
 373:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 374:drivers/Src/stm32f767xx_usart_driver.c **** 			else
 375:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 376:drivers/Src/stm32f767xx_usart_driver.c **** 				//Parity is used, so, 8bits will be of user data and 1 bit is parity
 377:drivers/Src/stm32f767xx_usart_driver.c **** 				 *pRxBuffer = (pUSARTHandle->pUSARTx->RDR  & (uint8_t)0xFF);
 1003              		.loc 1 377 32
 1004 0056 FB68     		ldr	r3, [r7, #12]
 1005 0058 1B68     		ldr	r3, [r3]
 1006              		.loc 1 377 41
 1007 005a 5B6A     		ldr	r3, [r3, #36]
 1008              		.loc 1 377 17
 1009 005c DAB2     		uxtb	r2, r3
 1010 005e BB68     		ldr	r3, [r7, #8]
 1011 0060 1A70     		strb	r2, [r3]
 378:drivers/Src/stm32f767xx_usart_driver.c **** 				 
 379:drivers/Src/stm32f767xx_usart_driver.c **** 				 //Increment the pRxBuffer
 380:drivers/Src/stm32f767xx_usart_driver.c **** 				pRxBuffer++;
 1012              		.loc 1 380 14
 1013 0062 BB68     		ldr	r3, [r7, #8]
 1014 0064 0133     		adds	r3, r3, #1
 1015 0066 BB60     		str	r3, [r7, #8]
 1016 0068 16E0     		b	.L60
 1017              	.L58:
 381:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 382:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 383:drivers/Src/stm32f767xx_usart_driver.c **** 		else
 384:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 385:drivers/Src/stm32f767xx_usart_driver.c **** 			//receive 8bit data in a frame
 386:drivers/Src/stm32f767xx_usart_driver.c **** 
 387:drivers/Src/stm32f767xx_usart_driver.c **** 			//check are we using USART_ParityControl control or not
 388:drivers/Src/stm32f767xx_usart_driver.c **** 			if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 1018              		.loc 1 388 33
 1019 006a FB68     		ldr	r3, [r7, #12]
 1020 006c 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1021              		.loc 1 388 6
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 26


 1022 006e 002B     		cmp	r3, #0
 1023 0070 06D1     		bne	.L61
 389:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 390:drivers/Src/stm32f767xx_usart_driver.c **** 				//No parity is used , so all 8bits will be of user data
 391:drivers/Src/stm32f767xx_usart_driver.c **** 
 392:drivers/Src/stm32f767xx_usart_driver.c **** 				//read 8 bits from DR
 393:drivers/Src/stm32f767xx_usart_driver.c ****                 *pRxBuffer = (uint8_t)(pUSARTHandle->pUSARTx->RDR & (uint8_t)0xFF);
 1024              		.loc 1 393 52
 1025 0072 FB68     		ldr	r3, [r7, #12]
 1026 0074 1B68     		ldr	r3, [r3]
 1027              		.loc 1 393 61
 1028 0076 5B6A     		ldr	r3, [r3, #36]
 1029              		.loc 1 393 30
 1030 0078 DAB2     		uxtb	r2, r3
 1031              		.loc 1 393 28
 1032 007a BB68     		ldr	r3, [r7, #8]
 1033 007c 1A70     		strb	r2, [r3]
 1034 007e 08E0     		b	.L62
 1035              	.L61:
 394:drivers/Src/stm32f767xx_usart_driver.c ****             }
 395:drivers/Src/stm32f767xx_usart_driver.c **** 
 396:drivers/Src/stm32f767xx_usart_driver.c ****             else
 397:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 398:drivers/Src/stm32f767xx_usart_driver.c **** 				//Parity is used, so , 7 bits will be of user data and 1 bit is parity
 399:drivers/Src/stm32f767xx_usart_driver.c **** 
 400:drivers/Src/stm32f767xx_usart_driver.c **** 				//read only 7 bits , hence mask the DR with 0X7F
 401:drivers/Src/stm32f767xx_usart_driver.c **** 				 *pRxBuffer = (uint8_t)(pUSARTHandle->pUSARTx->RDR  & (uint8_t)0x7F);
 1036              		.loc 1 401 41
 1037 0080 FB68     		ldr	r3, [r7, #12]
 1038 0082 1B68     		ldr	r3, [r3]
 1039              		.loc 1 401 50
 1040 0084 5B6A     		ldr	r3, [r3, #36]
 1041              		.loc 1 401 19
 1042 0086 DBB2     		uxtb	r3, r3
 1043 0088 03F07F03 		and	r3, r3, #127
 1044 008c DAB2     		uxtb	r2, r3
 1045              		.loc 1 401 17
 1046 008e BB68     		ldr	r3, [r7, #8]
 1047 0090 1A70     		strb	r2, [r3]
 1048              	.L62:
 402:drivers/Src/stm32f767xx_usart_driver.c **** 
 403:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 404:drivers/Src/stm32f767xx_usart_driver.c **** 
 405:drivers/Src/stm32f767xx_usart_driver.c **** 			//increment the pRxBuffer
 406:drivers/Src/stm32f767xx_usart_driver.c **** 			pRxBuffer++;
 1049              		.loc 1 406 13
 1050 0092 BB68     		ldr	r3, [r7, #8]
 1051 0094 0133     		adds	r3, r3, #1
 1052 0096 BB60     		str	r3, [r7, #8]
 1053              	.L60:
 352:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 1054              		.loc 1 352 33 discriminator 2
 1055 0098 7B69     		ldr	r3, [r7, #20]
 1056 009a 0133     		adds	r3, r3, #1
 1057 009c 7B61     		str	r3, [r7, #20]
 1058              	.L56:
 352:drivers/Src/stm32f767xx_usart_driver.c **** 	{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 27


 1059              		.loc 1 352 25 discriminator 1
 1060 009e 7A69     		ldr	r2, [r7, #20]
 1061 00a0 7B68     		ldr	r3, [r7, #4]
 1062 00a2 9A42     		cmp	r2, r3
 1063 00a4 B5D3     		bcc	.L63
 1064              	.LBE3:
 407:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 408:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 409:drivers/Src/stm32f767xx_usart_driver.c **** 
 410:drivers/Src/stm32f767xx_usart_driver.c **** }
 1065              		.loc 1 410 1
 1066 00a6 00BF     		nop
 1067 00a8 00BF     		nop
 1068 00aa 1837     		adds	r7, r7, #24
 1069              		.cfi_def_cfa_offset 8
 1070 00ac BD46     		mov	sp, r7
 1071              		.cfi_def_cfa_register 13
 1072              		@ sp needed
 1073 00ae 80BD     		pop	{r7, pc}
 1074              		.cfi_endproc
 1075              	.LFE8:
 1077              		.section	.text.USART_IRQInterruptConfig,"ax",%progbits
 1078              		.align	1
 1079              		.global	USART_IRQInterruptConfig
 1080              		.syntax unified
 1081              		.thumb
 1082              		.thumb_func
 1084              	USART_IRQInterruptConfig:
 1085              	.LFB9:
 411:drivers/Src/stm32f767xx_usart_driver.c **** 
 412:drivers/Src/stm32f767xx_usart_driver.c **** 
 413:drivers/Src/stm32f767xx_usart_driver.c **** 
 414:drivers/Src/stm32f767xx_usart_driver.c **** /**
 415:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART IRQ Interrupt Enable or Disable
 416:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 417:drivers/Src/stm32f767xx_usart_driver.c ****  * @param IRQNumber 
 418:drivers/Src/stm32f767xx_usart_driver.c ****  * @param EnorDi 
 419:drivers/Src/stm32f767xx_usart_driver.c ****  */
 420:drivers/Src/stm32f767xx_usart_driver.c **** void USART_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
 421:drivers/Src/stm32f767xx_usart_driver.c **** {
 1086              		.loc 1 421 1
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 8
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090              		@ link register save eliminated.
 1091 0000 80B4     		push	{r7}
 1092              		.cfi_def_cfa_offset 4
 1093              		.cfi_offset 7, -4
 1094 0002 83B0     		sub	sp, sp, #12
 1095              		.cfi_def_cfa_offset 16
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 0346     		mov	r3, r0
 1099 0008 0A46     		mov	r2, r1
 1100 000a FB71     		strb	r3, [r7, #7]
 1101 000c 1346     		mov	r3, r2
 1102 000e BB71     		strb	r3, [r7, #6]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 28


 422:drivers/Src/stm32f767xx_usart_driver.c ****     if(EnorDi == ENABLE)
 1103              		.loc 1 422 7
 1104 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1105 0012 012B     		cmp	r3, #1
 1106 0014 4ED1     		bne	.L65
 423:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 424:drivers/Src/stm32f767xx_usart_driver.c **** 		if(IRQNumber <= 31)							// 0 to 31
 1107              		.loc 1 424 5
 1108 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1109 0018 1F2B     		cmp	r3, #31
 1110 001a 0AD8     		bhi	.L66
 425:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 426:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ISER0 register
 427:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ISER0 |= (1 << IRQNumber);
 1111              		.loc 1 427 16
 1112 001c 504B     		ldr	r3, .L75
 1113 001e 1B68     		ldr	r3, [r3]
 1114              		.loc 1 427 22
 1115 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1116 0022 0121     		movs	r1, #1
 1117 0024 01FA02F2 		lsl	r2, r1, r2
 1118 0028 1146     		mov	r1, r2
 1119              		.loc 1 427 16
 1120 002a 4D4A     		ldr	r2, .L75
 1121 002c 0B43     		orrs	r3, r3, r1
 1122 002e 1360     		str	r3, [r2]
 428:drivers/Src/stm32f767xx_usart_driver.c **** 
 429:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (IRQNumber > 31 && IRQNumber < 64) // 32 to 63
 430:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 431:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ISER1 register
 432:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 433:drivers/Src/stm32f767xx_usart_driver.c **** 
 434:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (IRQNumber >= 64 && IRQNumber < 96) // 64 to 95
 435:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 436:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ISER2 register
 437:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 438:drivers/Src/stm32f767xx_usart_driver.c **** 			
 439:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (IRQNumber >= 96 && IRQNumber < 128) // 96 to 127 (max is 109 on F767)
 440:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 441:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ISER3 register
 442:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ISER3 |= (1 << (IRQNumber % 96));
 443:drivers/Src/stm32f767xx_usart_driver.c **** 			
 444:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 445:drivers/Src/stm32f767xx_usart_driver.c **** 	}else
 446:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 447:drivers/Src/stm32f767xx_usart_driver.c **** 		if(IRQNumber <= 31)
 448:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 449:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ICER0 register
 450:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ICER0 |= (1 << IRQNumber);
 451:drivers/Src/stm32f767xx_usart_driver.c **** 			
 452:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if(IRQNumber > 31 && IRQNumber < 64 )
 453:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 454:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ICER1 register
 455:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 456:drivers/Src/stm32f767xx_usart_driver.c **** 			
 457:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if(IRQNumber >= 64 && IRQNumber < 96 )
 458:drivers/Src/stm32f767xx_usart_driver.c **** 		{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 29


 459:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ICER2 register
 460:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 461:drivers/Src/stm32f767xx_usart_driver.c **** 			
 462:drivers/Src/stm32f767xx_usart_driver.c **** 		}else if (IRQNumber >= 96 && IRQNumber < 128)
 463:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 464:drivers/Src/stm32f767xx_usart_driver.c **** 			//program ICER3 register
 465:drivers/Src/stm32f767xx_usart_driver.c **** 			*NVIC_ICER3 |= (1 << (IRQNumber % 96));
 466:drivers/Src/stm32f767xx_usart_driver.c **** 
 467:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 468:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 469:drivers/Src/stm32f767xx_usart_driver.c **** }
 1123              		.loc 1 469 1
 1124 0030 8FE0     		b	.L74
 1125              	.L66:
 429:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1126              		.loc 1 429 12
 1127 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1128 0034 1F2B     		cmp	r3, #31
 1129 0036 0FD9     		bls	.L68
 429:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1130              		.loc 1 429 28 discriminator 1
 1131 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1132 003a 3F2B     		cmp	r3, #63
 1133 003c 0CD8     		bhi	.L68
 432:drivers/Src/stm32f767xx_usart_driver.c **** 
 1134              		.loc 1 432 16
 1135 003e 494B     		ldr	r3, .L75+4
 1136 0040 1B68     		ldr	r3, [r3]
 432:drivers/Src/stm32f767xx_usart_driver.c **** 
 1137              		.loc 1 432 36
 1138 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1139 0044 02F01F02 		and	r2, r2, #31
 432:drivers/Src/stm32f767xx_usart_driver.c **** 
 1140              		.loc 1 432 22
 1141 0048 0121     		movs	r1, #1
 1142 004a 01FA02F2 		lsl	r2, r1, r2
 1143 004e 1146     		mov	r1, r2
 432:drivers/Src/stm32f767xx_usart_driver.c **** 
 1144              		.loc 1 432 16
 1145 0050 444A     		ldr	r2, .L75+4
 1146 0052 0B43     		orrs	r3, r3, r1
 1147 0054 1360     		str	r3, [r2]
 1148 0056 7CE0     		b	.L70
 1149              	.L68:
 434:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1150              		.loc 1 434 12
 1151 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1152 005a 3F2B     		cmp	r3, #63
 1153 005c 0FD9     		bls	.L69
 434:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1154              		.loc 1 434 29 discriminator 1
 1155 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1156 0060 5F2B     		cmp	r3, #95
 1157 0062 0CD8     		bhi	.L69
 437:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1158              		.loc 1 437 16
 1159 0064 404B     		ldr	r3, .L75+8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 30


 1160 0066 1B68     		ldr	r3, [r3]
 437:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1161              		.loc 1 437 36
 1162 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1163 006a 02F03F02 		and	r2, r2, #63
 437:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1164              		.loc 1 437 22
 1165 006e 0121     		movs	r1, #1
 1166 0070 01FA02F2 		lsl	r2, r1, r2
 1167 0074 1146     		mov	r1, r2
 437:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1168              		.loc 1 437 16
 1169 0076 3C4A     		ldr	r2, .L75+8
 1170 0078 0B43     		orrs	r3, r3, r1
 1171 007a 1360     		str	r3, [r2]
 1172 007c 69E0     		b	.L70
 1173              	.L69:
 439:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1174              		.loc 1 439 12
 1175 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1176 0080 5F2B     		cmp	r3, #95
 1177 0082 66D9     		bls	.L74
 439:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1178              		.loc 1 439 42 discriminator 1
 1179 0084 97F90730 		ldrsb	r3, [r7, #7]
 439:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1180              		.loc 1 439 29 discriminator 1
 1181 0088 002B     		cmp	r3, #0
 1182 008a 62DB     		blt	.L74
 442:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1183              		.loc 1 442 16
 1184 008c 374B     		ldr	r3, .L75+12
 1185 008e 1868     		ldr	r0, [r3]
 442:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1186              		.loc 1 442 36
 1187 0090 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1188 0092 374B     		ldr	r3, .L75+16
 1189 0094 A3FB0213 		umull	r1, r3, r3, r2
 1190 0098 9909     		lsrs	r1, r3, #6
 1191 009a 0B46     		mov	r3, r1
 1192 009c 5B00     		lsls	r3, r3, #1
 1193 009e 0B44     		add	r3, r3, r1
 1194 00a0 5B01     		lsls	r3, r3, #5
 1195 00a2 D31A     		subs	r3, r2, r3
 1196 00a4 DBB2     		uxtb	r3, r3
 1197 00a6 1A46     		mov	r2, r3
 442:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1198              		.loc 1 442 22
 1199 00a8 0123     		movs	r3, #1
 1200 00aa 9340     		lsls	r3, r3, r2
 442:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1201              		.loc 1 442 16
 1202 00ac 2F4A     		ldr	r2, .L75+12
 1203 00ae 0343     		orrs	r3, r3, r0
 1204 00b0 1360     		str	r3, [r2]
 1205              		.loc 1 469 1
 1206 00b2 4EE0     		b	.L74
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 31


 1207              	.L65:
 447:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1208              		.loc 1 447 5
 1209 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1210 00b6 1F2B     		cmp	r3, #31
 1211 00b8 0AD8     		bhi	.L71
 450:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1212              		.loc 1 450 16
 1213 00ba 2E4B     		ldr	r3, .L75+20
 1214 00bc 1B68     		ldr	r3, [r3]
 450:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1215              		.loc 1 450 22
 1216 00be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1217 00c0 0121     		movs	r1, #1
 1218 00c2 01FA02F2 		lsl	r2, r1, r2
 1219 00c6 1146     		mov	r1, r2
 450:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1220              		.loc 1 450 16
 1221 00c8 2A4A     		ldr	r2, .L75+20
 1222 00ca 0B43     		orrs	r3, r3, r1
 1223 00cc 1360     		str	r3, [r2]
 1224              		.loc 1 469 1
 1225 00ce 40E0     		b	.L74
 1226              	.L71:
 452:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1227              		.loc 1 452 11
 1228 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1229 00d2 1F2B     		cmp	r3, #31
 1230 00d4 0FD9     		bls	.L72
 452:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1231              		.loc 1 452 27 discriminator 1
 1232 00d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1233 00d8 3F2B     		cmp	r3, #63
 1234 00da 0CD8     		bhi	.L72
 455:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1235              		.loc 1 455 16
 1236 00dc 264B     		ldr	r3, .L75+24
 1237 00de 1B68     		ldr	r3, [r3]
 455:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1238              		.loc 1 455 36
 1239 00e0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1240 00e2 02F01F02 		and	r2, r2, #31
 455:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1241              		.loc 1 455 22
 1242 00e6 0121     		movs	r1, #1
 1243 00e8 01FA02F2 		lsl	r2, r1, r2
 1244 00ec 1146     		mov	r1, r2
 455:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1245              		.loc 1 455 16
 1246 00ee 224A     		ldr	r2, .L75+24
 1247 00f0 0B43     		orrs	r3, r3, r1
 1248 00f2 1360     		str	r3, [r2]
 1249 00f4 2DE0     		b	.L70
 1250              	.L72:
 457:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1251              		.loc 1 457 11
 1252 00f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 32


 1253 00f8 3F2B     		cmp	r3, #63
 1254 00fa 0FD9     		bls	.L73
 457:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1255              		.loc 1 457 28 discriminator 1
 1256 00fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1257 00fe 5F2B     		cmp	r3, #95
 1258 0100 0CD8     		bhi	.L73
 460:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1259              		.loc 1 460 16
 1260 0102 1E4B     		ldr	r3, .L75+28
 1261 0104 1B68     		ldr	r3, [r3]
 460:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1262              		.loc 1 460 36
 1263 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1264 0108 02F03F02 		and	r2, r2, #63
 460:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1265              		.loc 1 460 22
 1266 010c 0121     		movs	r1, #1
 1267 010e 01FA02F2 		lsl	r2, r1, r2
 1268 0112 1146     		mov	r1, r2
 460:drivers/Src/stm32f767xx_usart_driver.c **** 			
 1269              		.loc 1 460 16
 1270 0114 194A     		ldr	r2, .L75+28
 1271 0116 0B43     		orrs	r3, r3, r1
 1272 0118 1360     		str	r3, [r2]
 1273 011a 1AE0     		b	.L70
 1274              	.L73:
 462:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1275              		.loc 1 462 12
 1276 011c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1277 011e 5F2B     		cmp	r3, #95
 1278 0120 17D9     		bls	.L74
 462:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1279              		.loc 1 462 42 discriminator 1
 1280 0122 97F90730 		ldrsb	r3, [r7, #7]
 462:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 1281              		.loc 1 462 29 discriminator 1
 1282 0126 002B     		cmp	r3, #0
 1283 0128 13DB     		blt	.L74
 465:drivers/Src/stm32f767xx_usart_driver.c **** 
 1284              		.loc 1 465 16
 1285 012a 154B     		ldr	r3, .L75+32
 1286 012c 1868     		ldr	r0, [r3]
 465:drivers/Src/stm32f767xx_usart_driver.c **** 
 1287              		.loc 1 465 36
 1288 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1289 0130 0F4B     		ldr	r3, .L75+16
 1290 0132 A3FB0213 		umull	r1, r3, r3, r2
 1291 0136 9909     		lsrs	r1, r3, #6
 1292 0138 0B46     		mov	r3, r1
 1293 013a 5B00     		lsls	r3, r3, #1
 1294 013c 0B44     		add	r3, r3, r1
 1295 013e 5B01     		lsls	r3, r3, #5
 1296 0140 D31A     		subs	r3, r2, r3
 1297 0142 DBB2     		uxtb	r3, r3
 1298 0144 1A46     		mov	r2, r3
 465:drivers/Src/stm32f767xx_usart_driver.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 33


 1299              		.loc 1 465 22
 1300 0146 0123     		movs	r3, #1
 1301 0148 9340     		lsls	r3, r3, r2
 465:drivers/Src/stm32f767xx_usart_driver.c **** 
 1302              		.loc 1 465 16
 1303 014a 0D4A     		ldr	r2, .L75+32
 1304 014c 0343     		orrs	r3, r3, r0
 1305 014e 1360     		str	r3, [r2]
 1306              		.loc 1 469 1
 1307 0150 FFE7     		b	.L74
 1308              	.L70:
 1309              	.L74:
 1310 0152 00BF     		nop
 1311 0154 0C37     		adds	r7, r7, #12
 1312              		.cfi_def_cfa_offset 4
 1313 0156 BD46     		mov	sp, r7
 1314              		.cfi_def_cfa_register 13
 1315              		@ sp needed
 1316 0158 5DF8047B 		ldr	r7, [sp], #4
 1317              		.cfi_restore 7
 1318              		.cfi_def_cfa_offset 0
 1319 015c 7047     		bx	lr
 1320              	.L76:
 1321 015e 00BF     		.align	2
 1322              	.L75:
 1323 0160 00E100E0 		.word	-536813312
 1324 0164 04E100E0 		.word	-536813308
 1325 0168 08E100E0 		.word	-536813304
 1326 016c 0CE100E0 		.word	-536813300
 1327 0170 ABAAAAAA 		.word	-1431655765
 1328 0174 80E100E0 		.word	-536813184
 1329 0178 84E100E0 		.word	-536813180
 1330 017c 88E100E0 		.word	-536813176
 1331 0180 8CE100E0 		.word	-536813172
 1332              		.cfi_endproc
 1333              	.LFE9:
 1335              		.section	.text.USART_IRQPriorityConfig,"ax",%progbits
 1336              		.align	1
 1337              		.global	USART_IRQPriorityConfig
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1342              	USART_IRQPriorityConfig:
 1343              	.LFB10:
 470:drivers/Src/stm32f767xx_usart_driver.c **** 
 471:drivers/Src/stm32f767xx_usart_driver.c **** 
 472:drivers/Src/stm32f767xx_usart_driver.c **** /**
 473:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART IRQ Priority Configuration
 474:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 475:drivers/Src/stm32f767xx_usart_driver.c ****  * @param IRQNumber 
 476:drivers/Src/stm32f767xx_usart_driver.c ****  * @param IRQPriority 
 477:drivers/Src/stm32f767xx_usart_driver.c ****  */
 478:drivers/Src/stm32f767xx_usart_driver.c **** void USART_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
 479:drivers/Src/stm32f767xx_usart_driver.c **** {
 1344              		.loc 1 479 1
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 34


 1347              		@ frame_needed = 1, uses_anonymous_args = 0
 1348              		@ link register save eliminated.
 1349 0000 80B4     		push	{r7}
 1350              		.cfi_def_cfa_offset 4
 1351              		.cfi_offset 7, -4
 1352 0002 85B0     		sub	sp, sp, #20
 1353              		.cfi_def_cfa_offset 24
 1354 0004 00AF     		add	r7, sp, #0
 1355              		.cfi_def_cfa_register 7
 1356 0006 0346     		mov	r3, r0
 1357 0008 3960     		str	r1, [r7]
 1358 000a FB71     		strb	r3, [r7, #7]
 480:drivers/Src/stm32f767xx_usart_driver.c ****     //1. first lets find out the ipr register
 481:drivers/Src/stm32f767xx_usart_driver.c **** 	uint8_t iprx = IRQNumber / 4;
 1359              		.loc 1 481 10
 1360 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1361 000e 9B08     		lsrs	r3, r3, #2
 1362 0010 FB73     		strb	r3, [r7, #15]
 482:drivers/Src/stm32f767xx_usart_driver.c **** 	uint8_t iprx_section  = IRQNumber % 4;
 1363              		.loc 1 482 10
 1364 0012 FB79     		ldrb	r3, [r7, #7]
 1365 0014 03F00303 		and	r3, r3, #3
 1366 0018 BB73     		strb	r3, [r7, #14]
 483:drivers/Src/stm32f767xx_usart_driver.c **** 	
 484:drivers/Src/stm32f767xx_usart_driver.c **** 	// !! 16 programmable priority levels (4 bits of interrupt priority are used) Cf. RM 10.1
 485:drivers/Src/stm32f767xx_usart_driver.c **** 	// only 4 MSBits are implemented!
 486:drivers/Src/stm32f767xx_usart_driver.c **** 
 487:drivers/Src/stm32f767xx_usart_driver.c **** 	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 1367              		.loc 1 487 44
 1368 001a BB7B     		ldrb	r3, [r7, #14]
 1369 001c DB00     		lsls	r3, r3, #3
 1370 001e DBB2     		uxtb	r3, r3
 1371              		.loc 1 487 10
 1372 0020 0433     		adds	r3, r3, #4
 1373 0022 7B73     		strb	r3, [r7, #13]
 488:drivers/Src/stm32f767xx_usart_driver.c **** 	*(NVIC_PR_BASEADDR + iprx) |= (IRQPriority << shift_amount);
 1374              		.loc 1 488 29
 1375 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1376 0026 9A00     		lsls	r2, r3, #2
 1377 0028 084B     		ldr	r3, .L78
 1378 002a 1344     		add	r3, r3, r2
 1379 002c 1968     		ldr	r1, [r3]
 1380              		.loc 1 488 45
 1381 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1382 0030 3A68     		ldr	r2, [r7]
 1383 0032 9A40     		lsls	r2, r2, r3
 1384              		.loc 1 488 29
 1385 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1386 0036 9800     		lsls	r0, r3, #2
 1387 0038 044B     		ldr	r3, .L78
 1388 003a 0344     		add	r3, r3, r0
 1389 003c 0A43     		orrs	r2, r2, r1
 1390 003e 1A60     		str	r2, [r3]
 489:drivers/Src/stm32f767xx_usart_driver.c **** }
 1391              		.loc 1 489 1
 1392 0040 00BF     		nop
 1393 0042 1437     		adds	r7, r7, #20
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 35


 1394              		.cfi_def_cfa_offset 4
 1395 0044 BD46     		mov	sp, r7
 1396              		.cfi_def_cfa_register 13
 1397              		@ sp needed
 1398 0046 5DF8047B 		ldr	r7, [sp], #4
 1399              		.cfi_restore 7
 1400              		.cfi_def_cfa_offset 0
 1401 004a 7047     		bx	lr
 1402              	.L79:
 1403              		.align	2
 1404              	.L78:
 1405 004c 00E400E0 		.word	-536812544
 1406              		.cfi_endproc
 1407              	.LFE10:
 1409              		.section	.text.USART_SendDataIT,"ax",%progbits
 1410              		.align	1
 1411              		.global	USART_SendDataIT
 1412              		.syntax unified
 1413              		.thumb
 1414              		.thumb_func
 1416              	USART_SendDataIT:
 1417              	.LFB11:
 490:drivers/Src/stm32f767xx_usart_driver.c **** 
 491:drivers/Src/stm32f767xx_usart_driver.c **** 
 492:drivers/Src/stm32f767xx_usart_driver.c **** 
 493:drivers/Src/stm32f767xx_usart_driver.c **** /**
 494:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART Send Data with IT
 495:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 496:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTHandle 
 497:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pTxBuffer 
 498:drivers/Src/stm32f767xx_usart_driver.c ****  * @param Len 
 499:drivers/Src/stm32f767xx_usart_driver.c ****  * @return uint8_t 
 500:drivers/Src/stm32f767xx_usart_driver.c ****  */
 501:drivers/Src/stm32f767xx_usart_driver.c **** uint8_t USART_SendDataIT(USART_Handle_t *pUSARTHandle,uint8_t *pTxBuffer, uint32_t Len)
 502:drivers/Src/stm32f767xx_usart_driver.c **** {
 1418              		.loc 1 502 1
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 24
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422              		@ link register save eliminated.
 1423 0000 80B4     		push	{r7}
 1424              		.cfi_def_cfa_offset 4
 1425              		.cfi_offset 7, -4
 1426 0002 87B0     		sub	sp, sp, #28
 1427              		.cfi_def_cfa_offset 32
 1428 0004 00AF     		add	r7, sp, #0
 1429              		.cfi_def_cfa_register 7
 1430 0006 F860     		str	r0, [r7, #12]
 1431 0008 B960     		str	r1, [r7, #8]
 1432 000a 7A60     		str	r2, [r7, #4]
 503:drivers/Src/stm32f767xx_usart_driver.c **** 	uint8_t txstate = pUSARTHandle->TxBusyState;
 1433              		.loc 1 503 10
 1434 000c FB68     		ldr	r3, [r7, #12]
 1435 000e 93F82030 		ldrb	r3, [r3, #32]
 1436 0012 FB75     		strb	r3, [r7, #23]
 504:drivers/Src/stm32f767xx_usart_driver.c **** 
 505:drivers/Src/stm32f767xx_usart_driver.c **** 	if(txstate != USART_BUSY_IN_TX)
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 36


 1437              		.loc 1 505 4
 1438 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1439 0016 022B     		cmp	r3, #2
 1440 0018 19D0     		beq	.L81
 506:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 507:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->TxLen = Len;
 1441              		.loc 1 507 23
 1442 001a FB68     		ldr	r3, [r7, #12]
 1443 001c 7A68     		ldr	r2, [r7, #4]
 1444 001e 9A61     		str	r2, [r3, #24]
 508:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->pTxBuffer = pTxBuffer;
 1445              		.loc 1 508 27
 1446 0020 FB68     		ldr	r3, [r7, #12]
 1447 0022 BA68     		ldr	r2, [r7, #8]
 1448 0024 1A61     		str	r2, [r3, #16]
 509:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->TxBusyState = USART_BUSY_IN_TX;
 1449              		.loc 1 509 29
 1450 0026 FB68     		ldr	r3, [r7, #12]
 1451 0028 0222     		movs	r2, #2
 1452 002a 83F82020 		strb	r2, [r3, #32]
 510:drivers/Src/stm32f767xx_usart_driver.c **** 
 511:drivers/Src/stm32f767xx_usart_driver.c **** 		//enable interrupt for TXE
 512:drivers/Src/stm32f767xx_usart_driver.c ****         pUSARTHandle->pUSARTx->CR1 |= (1 << USART_CR1_TXEIE);
 1453              		.loc 1 512 21
 1454 002e FB68     		ldr	r3, [r7, #12]
 1455 0030 1B68     		ldr	r3, [r3]
 1456              		.loc 1 512 36
 1457 0032 1A68     		ldr	r2, [r3]
 1458              		.loc 1 512 21
 1459 0034 FB68     		ldr	r3, [r7, #12]
 1460 0036 1B68     		ldr	r3, [r3]
 1461              		.loc 1 512 36
 1462 0038 42F08002 		orr	r2, r2, #128
 1463 003c 1A60     		str	r2, [r3]
 513:drivers/Src/stm32f767xx_usart_driver.c **** 
 514:drivers/Src/stm32f767xx_usart_driver.c ****         //enable interrupt for TC 
 515:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->pUSARTx->CR1 |= (1 << USART_CR1_TCIE);		
 1464              		.loc 1 515 15
 1465 003e FB68     		ldr	r3, [r7, #12]
 1466 0040 1B68     		ldr	r3, [r3]
 1467              		.loc 1 515 30
 1468 0042 1A68     		ldr	r2, [r3]
 1469              		.loc 1 515 15
 1470 0044 FB68     		ldr	r3, [r7, #12]
 1471 0046 1B68     		ldr	r3, [r3]
 1472              		.loc 1 515 30
 1473 0048 42F04002 		orr	r2, r2, #64
 1474 004c 1A60     		str	r2, [r3]
 1475              	.L81:
 516:drivers/Src/stm32f767xx_usart_driver.c **** 		
 517:drivers/Src/stm32f767xx_usart_driver.c **** 
 518:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 519:drivers/Src/stm32f767xx_usart_driver.c **** 
 520:drivers/Src/stm32f767xx_usart_driver.c **** 	return txstate;
 1476              		.loc 1 520 9
 1477 004e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 521:drivers/Src/stm32f767xx_usart_driver.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 37


 522:drivers/Src/stm32f767xx_usart_driver.c **** }
 1478              		.loc 1 522 1
 1479 0050 1846     		mov	r0, r3
 1480 0052 1C37     		adds	r7, r7, #28
 1481              		.cfi_def_cfa_offset 4
 1482 0054 BD46     		mov	sp, r7
 1483              		.cfi_def_cfa_register 13
 1484              		@ sp needed
 1485 0056 5DF8047B 		ldr	r7, [sp], #4
 1486              		.cfi_restore 7
 1487              		.cfi_def_cfa_offset 0
 1488 005a 7047     		bx	lr
 1489              		.cfi_endproc
 1490              	.LFE11:
 1492              		.section	.text.USART_ReceiveDataIT,"ax",%progbits
 1493              		.align	1
 1494              		.global	USART_ReceiveDataIT
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1499              	USART_ReceiveDataIT:
 1500              	.LFB12:
 523:drivers/Src/stm32f767xx_usart_driver.c **** 
 524:drivers/Src/stm32f767xx_usart_driver.c **** 
 525:drivers/Src/stm32f767xx_usart_driver.c **** /**
 526:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART Receive Data with IT
 527:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 528:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTHandle 
 529:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pRxBuffer 
 530:drivers/Src/stm32f767xx_usart_driver.c ****  * @param Len 
 531:drivers/Src/stm32f767xx_usart_driver.c ****  * @return uint8_t 
 532:drivers/Src/stm32f767xx_usart_driver.c ****  */
 533:drivers/Src/stm32f767xx_usart_driver.c **** uint8_t USART_ReceiveDataIT(USART_Handle_t *pUSARTHandle,uint8_t *pRxBuffer, uint32_t Len)
 534:drivers/Src/stm32f767xx_usart_driver.c **** {
 1501              		.loc 1 534 1
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 24
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505              		@ link register save eliminated.
 1506 0000 80B4     		push	{r7}
 1507              		.cfi_def_cfa_offset 4
 1508              		.cfi_offset 7, -4
 1509 0002 87B0     		sub	sp, sp, #28
 1510              		.cfi_def_cfa_offset 32
 1511 0004 00AF     		add	r7, sp, #0
 1512              		.cfi_def_cfa_register 7
 1513 0006 F860     		str	r0, [r7, #12]
 1514 0008 B960     		str	r1, [r7, #8]
 1515 000a 7A60     		str	r2, [r7, #4]
 535:drivers/Src/stm32f767xx_usart_driver.c **** 	uint8_t rxstate = pUSARTHandle->RxBusyState;
 1516              		.loc 1 535 10
 1517 000c FB68     		ldr	r3, [r7, #12]
 1518 000e 93F82130 		ldrb	r3, [r3, #33]
 1519 0012 FB75     		strb	r3, [r7, #23]
 536:drivers/Src/stm32f767xx_usart_driver.c **** 
 537:drivers/Src/stm32f767xx_usart_driver.c **** 	if(rxstate != USART_BUSY_IN_RX)
 1520              		.loc 1 537 4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 38


 1521 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1522 0016 012B     		cmp	r3, #1
 1523 0018 11D0     		beq	.L84
 538:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 539:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->RxLen = Len;
 1524              		.loc 1 539 23
 1525 001a FB68     		ldr	r3, [r7, #12]
 1526 001c 7A68     		ldr	r2, [r7, #4]
 1527 001e DA61     		str	r2, [r3, #28]
 540:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->pRxBuffer = pRxBuffer;
 1528              		.loc 1 540 27
 1529 0020 FB68     		ldr	r3, [r7, #12]
 1530 0022 BA68     		ldr	r2, [r7, #8]
 1531 0024 5A61     		str	r2, [r3, #20]
 541:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->RxBusyState = USART_BUSY_IN_RX;
 1532              		.loc 1 541 29
 1533 0026 FB68     		ldr	r3, [r7, #12]
 1534 0028 0122     		movs	r2, #1
 1535 002a 83F82120 		strb	r2, [r3, #33]
 542:drivers/Src/stm32f767xx_usart_driver.c **** 
 543:drivers/Src/stm32f767xx_usart_driver.c **** 		//enable interrupt for RXNE
 544:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->pUSARTx->CR1 |= (1 << USART_CR1_RXNEIE);
 1536              		.loc 1 544 15
 1537 002e FB68     		ldr	r3, [r7, #12]
 1538 0030 1B68     		ldr	r3, [r3]
 1539              		.loc 1 544 30
 1540 0032 1A68     		ldr	r2, [r3]
 1541              		.loc 1 544 15
 1542 0034 FB68     		ldr	r3, [r7, #12]
 1543 0036 1B68     		ldr	r3, [r3]
 1544              		.loc 1 544 30
 1545 0038 42F02002 		orr	r2, r2, #32
 1546 003c 1A60     		str	r2, [r3]
 1547              	.L84:
 545:drivers/Src/stm32f767xx_usart_driver.c **** 
 546:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 547:drivers/Src/stm32f767xx_usart_driver.c **** 
 548:drivers/Src/stm32f767xx_usart_driver.c **** 	return rxstate;
 1548              		.loc 1 548 9
 1549 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 549:drivers/Src/stm32f767xx_usart_driver.c **** 
 550:drivers/Src/stm32f767xx_usart_driver.c **** }
 1550              		.loc 1 550 1
 1551 0040 1846     		mov	r0, r3
 1552 0042 1C37     		adds	r7, r7, #28
 1553              		.cfi_def_cfa_offset 4
 1554 0044 BD46     		mov	sp, r7
 1555              		.cfi_def_cfa_register 13
 1556              		@ sp needed
 1557 0046 5DF8047B 		ldr	r7, [sp], #4
 1558              		.cfi_restore 7
 1559              		.cfi_def_cfa_offset 0
 1560 004a 7047     		bx	lr
 1561              		.cfi_endproc
 1562              	.LFE12:
 1564              		.section	.text.USART_IRQHandling,"ax",%progbits
 1565              		.align	1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 39


 1566              		.global	USART_IRQHandling
 1567              		.syntax unified
 1568              		.thumb
 1569              		.thumb_func
 1571              	USART_IRQHandling:
 1572              	.LFB13:
 551:drivers/Src/stm32f767xx_usart_driver.c **** 
 552:drivers/Src/stm32f767xx_usart_driver.c **** 
 553:drivers/Src/stm32f767xx_usart_driver.c **** /**
 554:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART IRQ Handling
 555:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 556:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTHandle 
 557:drivers/Src/stm32f767xx_usart_driver.c ****  */
 558:drivers/Src/stm32f767xx_usart_driver.c **** void USART_IRQHandling(USART_Handle_t *pUSARTHandle)
 559:drivers/Src/stm32f767xx_usart_driver.c **** {
 1573              		.loc 1 559 1
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 24
 1576              		@ frame_needed = 1, uses_anonymous_args = 0
 1577 0000 80B5     		push	{r7, lr}
 1578              		.cfi_def_cfa_offset 8
 1579              		.cfi_offset 7, -8
 1580              		.cfi_offset 14, -4
 1581 0002 86B0     		sub	sp, sp, #24
 1582              		.cfi_def_cfa_offset 32
 1583 0004 00AF     		add	r7, sp, #0
 1584              		.cfi_def_cfa_register 7
 1585 0006 7860     		str	r0, [r7, #4]
 560:drivers/Src/stm32f767xx_usart_driver.c **** 
 561:drivers/Src/stm32f767xx_usart_driver.c **** 	uint32_t temp1 , temp2;
 562:drivers/Src/stm32f767xx_usart_driver.c **** 	uint16_t *pdata;
 563:drivers/Src/stm32f767xx_usart_driver.c **** 
 564:drivers/Src/stm32f767xx_usart_driver.c **** /*************************Check for TC flag ********************************************/
 565:drivers/Src/stm32f767xx_usart_driver.c **** 
 566:drivers/Src/stm32f767xx_usart_driver.c ****     //check the state of TC bit in the SR
 567:drivers/Src/stm32f767xx_usart_driver.c **** 	temp1 = pUSARTHandle->pUSARTx->ISR & ( 1 << USART_ISR_TC);
 1586              		.loc 1 567 22
 1587 0008 7B68     		ldr	r3, [r7, #4]
 1588 000a 1B68     		ldr	r3, [r3]
 1589              		.loc 1 567 31
 1590 000c DB69     		ldr	r3, [r3, #28]
 1591              		.loc 1 567 8
 1592 000e 03F04003 		and	r3, r3, #64
 1593 0012 7B61     		str	r3, [r7, #20]
 568:drivers/Src/stm32f767xx_usart_driver.c **** 	
 569:drivers/Src/stm32f767xx_usart_driver.c **** 	 //check the state of TCEIE bit 
 570:drivers/Src/stm32f767xx_usart_driver.c **** 	temp2 = pUSARTHandle->pUSARTx->CR1 & ( 1 << USART_CR1_TCIE);
 1594              		.loc 1 570 22
 1595 0014 7B68     		ldr	r3, [r7, #4]
 1596 0016 1B68     		ldr	r3, [r3]
 1597              		.loc 1 570 31
 1598 0018 1B68     		ldr	r3, [r3]
 1599              		.loc 1 570 8
 1600 001a 03F04003 		and	r3, r3, #64
 1601 001e 3B61     		str	r3, [r7, #16]
 571:drivers/Src/stm32f767xx_usart_driver.c **** 
 572:drivers/Src/stm32f767xx_usart_driver.c **** 	if(temp1 && temp2 )
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 40


 1602              		.loc 1 572 4
 1603 0020 7B69     		ldr	r3, [r7, #20]
 1604 0022 002B     		cmp	r3, #0
 1605 0024 21D0     		beq	.L87
 1606              		.loc 1 572 11 discriminator 1
 1607 0026 3B69     		ldr	r3, [r7, #16]
 1608 0028 002B     		cmp	r3, #0
 1609 002a 1ED0     		beq	.L87
 573:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 574:drivers/Src/stm32f767xx_usart_driver.c **** 		//this interrupt is because of TC
 575:drivers/Src/stm32f767xx_usart_driver.c **** 		
 576:drivers/Src/stm32f767xx_usart_driver.c **** 		//close transmission and call application callback if TxLen is zero
 577:drivers/Src/stm32f767xx_usart_driver.c **** 		if ( pUSARTHandle->TxBusyState == USART_BUSY_IN_TX)
 1610              		.loc 1 577 20
 1611 002c 7B68     		ldr	r3, [r7, #4]
 1612 002e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1613              		.loc 1 577 6
 1614 0032 022B     		cmp	r3, #2
 1615 0034 19D1     		bne	.L87
 578:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 579:drivers/Src/stm32f767xx_usart_driver.c **** 			//Check the TxLen . If it is zero then close the data transmission
 580:drivers/Src/stm32f767xx_usart_driver.c **** 			if(! pUSARTHandle->TxLen)
 1616              		.loc 1 580 21
 1617 0036 7B68     		ldr	r3, [r7, #4]
 1618 0038 9B69     		ldr	r3, [r3, #24]
 1619              		.loc 1 580 6
 1620 003a 002B     		cmp	r3, #0
 1621 003c 15D1     		bne	.L87
 581:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 582:drivers/Src/stm32f767xx_usart_driver.c **** 				//clear the TC flag
 583:drivers/Src/stm32f767xx_usart_driver.c **** 				pUSARTHandle->pUSARTx->ICR |= ( 1 << USART_ICR_TCCF);
 1622              		.loc 1 583 17
 1623 003e 7B68     		ldr	r3, [r7, #4]
 1624 0040 1B68     		ldr	r3, [r3]
 1625              		.loc 1 583 32
 1626 0042 1A6A     		ldr	r2, [r3, #32]
 1627              		.loc 1 583 17
 1628 0044 7B68     		ldr	r3, [r7, #4]
 1629 0046 1B68     		ldr	r3, [r3]
 1630              		.loc 1 583 32
 1631 0048 42F04002 		orr	r2, r2, #64
 1632 004c 1A62     		str	r2, [r3, #32]
 584:drivers/Src/stm32f767xx_usart_driver.c **** 				
 585:drivers/Src/stm32f767xx_usart_driver.c **** 				//Implement the code to clear the TCIE control bit 
 586:drivers/Src/stm32f767xx_usart_driver.c **** 				
 587:drivers/Src/stm32f767xx_usart_driver.c **** 				//Reset the application state
 588:drivers/Src/stm32f767xx_usart_driver.c **** 				pUSARTHandle->TxBusyState = USART_READY;
 1633              		.loc 1 588 31
 1634 004e 7B68     		ldr	r3, [r7, #4]
 1635 0050 0022     		movs	r2, #0
 1636 0052 83F82020 		strb	r2, [r3, #32]
 589:drivers/Src/stm32f767xx_usart_driver.c **** 				
 590:drivers/Src/stm32f767xx_usart_driver.c **** 				//Reset Buffer address to NULL
 591:drivers/Src/stm32f767xx_usart_driver.c **** 				pUSARTHandle->pTxBuffer = NULL;
 1637              		.loc 1 591 29
 1638 0056 7B68     		ldr	r3, [r7, #4]
 1639 0058 0022     		movs	r2, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 41


 1640 005a 1A61     		str	r2, [r3, #16]
 592:drivers/Src/stm32f767xx_usart_driver.c **** 
 593:drivers/Src/stm32f767xx_usart_driver.c **** 				//Reset the length to zero
 594:drivers/Src/stm32f767xx_usart_driver.c **** 				pUSARTHandle->TxLen = 0;
 1641              		.loc 1 594 25
 1642 005c 7B68     		ldr	r3, [r7, #4]
 1643 005e 0022     		movs	r2, #0
 1644 0060 9A61     		str	r2, [r3, #24]
 595:drivers/Src/stm32f767xx_usart_driver.c **** 				
 596:drivers/Src/stm32f767xx_usart_driver.c **** 				//Call the applicaton call back with event USART_EVENT_TX_CMPLT
 597:drivers/Src/stm32f767xx_usart_driver.c **** 				USART_ApplicationEventCallback(pUSARTHandle,USART_EVENT_TX_CMPLT);
 1645              		.loc 1 597 5
 1646 0062 0021     		movs	r1, #0
 1647 0064 7868     		ldr	r0, [r7, #4]
 1648 0066 FFF7FEFF 		bl	USART_ApplicationEventCallback
 1649              	.L87:
 598:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 599:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 600:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 601:drivers/Src/stm32f767xx_usart_driver.c **** 
 602:drivers/Src/stm32f767xx_usart_driver.c **** /*************************Check for TXE flag ********************************************/
 603:drivers/Src/stm32f767xx_usart_driver.c **** 
 604:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the state of TXE bit in the SR
 605:drivers/Src/stm32f767xx_usart_driver.c **** 	temp1 = pUSARTHandle->pUSARTx->ISR & ( 1 << USART_ISR_TXE);
 1650              		.loc 1 605 22
 1651 006a 7B68     		ldr	r3, [r7, #4]
 1652 006c 1B68     		ldr	r3, [r3]
 1653              		.loc 1 605 31
 1654 006e DB69     		ldr	r3, [r3, #28]
 1655              		.loc 1 605 8
 1656 0070 03F08003 		and	r3, r3, #128
 1657 0074 7B61     		str	r3, [r7, #20]
 606:drivers/Src/stm32f767xx_usart_driver.c **** 	
 607:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the state of TXEIE bit in CR1
 608:drivers/Src/stm32f767xx_usart_driver.c **** 	temp2 = pUSARTHandle->pUSARTx->CR1 & ( 1 << USART_CR1_TXEIE);
 1658              		.loc 1 608 22
 1659 0076 7B68     		ldr	r3, [r7, #4]
 1660 0078 1B68     		ldr	r3, [r3]
 1661              		.loc 1 608 31
 1662 007a 1B68     		ldr	r3, [r3]
 1663              		.loc 1 608 8
 1664 007c 03F08003 		and	r3, r3, #128
 1665 0080 3B61     		str	r3, [r7, #16]
 609:drivers/Src/stm32f767xx_usart_driver.c **** 
 610:drivers/Src/stm32f767xx_usart_driver.c **** 
 611:drivers/Src/stm32f767xx_usart_driver.c **** 	if(temp1 && temp2 )
 1666              		.loc 1 611 4
 1667 0082 7B69     		ldr	r3, [r7, #20]
 1668 0084 002B     		cmp	r3, #0
 1669 0086 55D0     		beq	.L88
 1670              		.loc 1 611 11 discriminator 1
 1671 0088 3B69     		ldr	r3, [r7, #16]
 1672 008a 002B     		cmp	r3, #0
 1673 008c 52D0     		beq	.L88
 612:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 613:drivers/Src/stm32f767xx_usart_driver.c **** 		//this interrupt is because of TXE
 614:drivers/Src/stm32f767xx_usart_driver.c **** 		
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 42


 615:drivers/Src/stm32f767xx_usart_driver.c **** 		if(pUSARTHandle->TxBusyState == USART_BUSY_IN_TX)
 1674              		.loc 1 615 18
 1675 008e 7B68     		ldr	r3, [r7, #4]
 1676 0090 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1677              		.loc 1 615 5
 1678 0094 022B     		cmp	r3, #2
 1679 0096 4DD1     		bne	.L88
 616:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 617:drivers/Src/stm32f767xx_usart_driver.c **** 			//Keep sending data until Txlen reaches to zero
 618:drivers/Src/stm32f767xx_usart_driver.c **** 			if(pUSARTHandle->TxLen > 0)
 1680              		.loc 1 618 19
 1681 0098 7B68     		ldr	r3, [r7, #4]
 1682 009a 9B69     		ldr	r3, [r3, #24]
 1683              		.loc 1 618 6
 1684 009c 002B     		cmp	r3, #0
 1685 009e 3DD0     		beq	.L89
 619:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 620:drivers/Src/stm32f767xx_usart_driver.c **** 				//Check the USART_WordLength item for 9BIT or 8BIT in a frame
 621:drivers/Src/stm32f767xx_usart_driver.c **** 				if(pUSARTHandle->USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 1686              		.loc 1 621 34
 1687 00a0 7B68     		ldr	r3, [r7, #4]
 1688 00a2 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1689              		.loc 1 621 7
 1690 00a4 012B     		cmp	r3, #1
 1691 00a6 29D1     		bne	.L90
 622:drivers/Src/stm32f767xx_usart_driver.c **** 				{
 623:drivers/Src/stm32f767xx_usart_driver.c **** 					//if 9BIT , load the DR with 2bytes masking the bits other than first 9 bits
 624:drivers/Src/stm32f767xx_usart_driver.c **** 					pdata = (uint16_t*) pUSARTHandle->pTxBuffer;
 1692              		.loc 1 624 12
 1693 00a8 7B68     		ldr	r3, [r7, #4]
 1694 00aa 1B69     		ldr	r3, [r3, #16]
 1695 00ac FB60     		str	r3, [r7, #12]
 625:drivers/Src/stm32f767xx_usart_driver.c **** 					
 626:drivers/Src/stm32f767xx_usart_driver.c **** 					//loading only first 9 bits , so we have to mask with the value 0x01FF
 627:drivers/Src/stm32f767xx_usart_driver.c **** 					pUSARTHandle->pUSARTx->TDR = (*pdata & (uint16_t)0x01FF);
 1696              		.loc 1 627 36
 1697 00ae FB68     		ldr	r3, [r7, #12]
 1698 00b0 1B88     		ldrh	r3, [r3]
 1699              		.loc 1 627 43
 1700 00b2 1A46     		mov	r2, r3
 1701              		.loc 1 627 18
 1702 00b4 7B68     		ldr	r3, [r7, #4]
 1703 00b6 1B68     		ldr	r3, [r3]
 1704              		.loc 1 627 43
 1705 00b8 C2F30802 		ubfx	r2, r2, #0, #9
 1706              		.loc 1 627 33
 1707 00bc 9A62     		str	r2, [r3, #40]
 628:drivers/Src/stm32f767xx_usart_driver.c **** 
 629:drivers/Src/stm32f767xx_usart_driver.c **** 					//check for USART_ParityControl
 630:drivers/Src/stm32f767xx_usart_driver.c **** 					if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 1708              		.loc 1 630 35
 1709 00be 7B68     		ldr	r3, [r7, #4]
 1710 00c0 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1711              		.loc 1 630 8
 1712 00c2 002B     		cmp	r3, #0
 1713 00c4 0FD1     		bne	.L91
 631:drivers/Src/stm32f767xx_usart_driver.c **** 					{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 43


 632:drivers/Src/stm32f767xx_usart_driver.c **** 						//No parity is used in this transfer , so, 9bits of user data will be sent
 633:drivers/Src/stm32f767xx_usart_driver.c **** 						//increment pTxBuffer twice
 634:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->pTxBuffer++;
 1714              		.loc 1 634 19
 1715 00c6 7B68     		ldr	r3, [r7, #4]
 1716 00c8 1B69     		ldr	r3, [r3, #16]
 1717              		.loc 1 634 30
 1718 00ca 5A1C     		adds	r2, r3, #1
 1719 00cc 7B68     		ldr	r3, [r7, #4]
 1720 00ce 1A61     		str	r2, [r3, #16]
 635:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->pTxBuffer++;
 1721              		.loc 1 635 19
 1722 00d0 7B68     		ldr	r3, [r7, #4]
 1723 00d2 1B69     		ldr	r3, [r3, #16]
 1724              		.loc 1 635 30
 1725 00d4 5A1C     		adds	r2, r3, #1
 1726 00d6 7B68     		ldr	r3, [r7, #4]
 1727 00d8 1A61     		str	r2, [r3, #16]
 636:drivers/Src/stm32f767xx_usart_driver.c **** 						
 637:drivers/Src/stm32f767xx_usart_driver.c **** 						//decrement the length
 638:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->TxLen-=2;
 1728              		.loc 1 638 26
 1729 00da 7B68     		ldr	r3, [r7, #4]
 1730 00dc 9B69     		ldr	r3, [r3, #24]
 1731 00de 9A1E     		subs	r2, r3, #2
 1732 00e0 7B68     		ldr	r3, [r7, #4]
 1733 00e2 9A61     		str	r2, [r3, #24]
 1734 00e4 1AE0     		b	.L89
 1735              	.L91:
 639:drivers/Src/stm32f767xx_usart_driver.c **** 					}
 640:drivers/Src/stm32f767xx_usart_driver.c **** 					else
 641:drivers/Src/stm32f767xx_usart_driver.c **** 					{
 642:drivers/Src/stm32f767xx_usart_driver.c **** 						//Parity bit is used in this transfer . so , 8bits of user data will be sent
 643:drivers/Src/stm32f767xx_usart_driver.c **** 						//The 9th bit will be replaced by parity bit by the hardware
 644:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->pTxBuffer++;
 1736              		.loc 1 644 19
 1737 00e6 7B68     		ldr	r3, [r7, #4]
 1738 00e8 1B69     		ldr	r3, [r3, #16]
 1739              		.loc 1 644 30
 1740 00ea 5A1C     		adds	r2, r3, #1
 1741 00ec 7B68     		ldr	r3, [r7, #4]
 1742 00ee 1A61     		str	r2, [r3, #16]
 645:drivers/Src/stm32f767xx_usart_driver.c **** 						
 646:drivers/Src/stm32f767xx_usart_driver.c **** 						//decrement the length
 647:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->TxLen-=1;
 1743              		.loc 1 647 26
 1744 00f0 7B68     		ldr	r3, [r7, #4]
 1745 00f2 9B69     		ldr	r3, [r3, #24]
 1746 00f4 5A1E     		subs	r2, r3, #1
 1747 00f6 7B68     		ldr	r3, [r7, #4]
 1748 00f8 9A61     		str	r2, [r3, #24]
 1749 00fa 0FE0     		b	.L89
 1750              	.L90:
 648:drivers/Src/stm32f767xx_usart_driver.c **** 					}
 649:drivers/Src/stm32f767xx_usart_driver.c **** 				}
 650:drivers/Src/stm32f767xx_usart_driver.c **** 				else
 651:drivers/Src/stm32f767xx_usart_driver.c **** 				{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 44


 652:drivers/Src/stm32f767xx_usart_driver.c **** 					//This is 8bit data transfer
 653:drivers/Src/stm32f767xx_usart_driver.c **** 					pUSARTHandle->pUSARTx->TDR = (*pUSARTHandle->pTxBuffer  & (uint8_t)0xFF);
 1751              		.loc 1 653 49
 1752 00fc 7B68     		ldr	r3, [r7, #4]
 1753 00fe 1B69     		ldr	r3, [r3, #16]
 1754              		.loc 1 653 36
 1755 0100 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1756              		.loc 1 653 18
 1757 0102 7B68     		ldr	r3, [r7, #4]
 1758 0104 1B68     		ldr	r3, [r3]
 1759              		.loc 1 653 33
 1760 0106 9A62     		str	r2, [r3, #40]
 654:drivers/Src/stm32f767xx_usart_driver.c **** 
 655:drivers/Src/stm32f767xx_usart_driver.c **** 					//increment the buffer address
 656:drivers/Src/stm32f767xx_usart_driver.c **** 					pUSARTHandle->pTxBuffer++;
 1761              		.loc 1 656 18
 1762 0108 7B68     		ldr	r3, [r7, #4]
 1763 010a 1B69     		ldr	r3, [r3, #16]
 1764              		.loc 1 656 29
 1765 010c 5A1C     		adds	r2, r3, #1
 1766 010e 7B68     		ldr	r3, [r7, #4]
 1767 0110 1A61     		str	r2, [r3, #16]
 657:drivers/Src/stm32f767xx_usart_driver.c **** 					
 658:drivers/Src/stm32f767xx_usart_driver.c **** 					//decrement the length
 659:drivers/Src/stm32f767xx_usart_driver.c **** 					pUSARTHandle->TxLen-=1;
 1768              		.loc 1 659 25
 1769 0112 7B68     		ldr	r3, [r7, #4]
 1770 0114 9B69     		ldr	r3, [r3, #24]
 1771 0116 5A1E     		subs	r2, r3, #1
 1772 0118 7B68     		ldr	r3, [r7, #4]
 1773 011a 9A61     		str	r2, [r3, #24]
 1774              	.L89:
 660:drivers/Src/stm32f767xx_usart_driver.c **** 				}
 661:drivers/Src/stm32f767xx_usart_driver.c **** 				
 662:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 663:drivers/Src/stm32f767xx_usart_driver.c **** 			if (pUSARTHandle->TxLen == 0 )
 1775              		.loc 1 663 20
 1776 011c 7B68     		ldr	r3, [r7, #4]
 1777 011e 9B69     		ldr	r3, [r3, #24]
 1778              		.loc 1 663 7
 1779 0120 002B     		cmp	r3, #0
 1780 0122 07D1     		bne	.L88
 664:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 665:drivers/Src/stm32f767xx_usart_driver.c **** 				//TxLen is zero 
 666:drivers/Src/stm32f767xx_usart_driver.c **** 				//clear the TXEIE bit (disable interrupt for TXE flag )
 667:drivers/Src/stm32f767xx_usart_driver.c **** 				pUSARTHandle->pUSARTx->CR1 &= ~( 1 << USART_CR1_TXEIE);
 1781              		.loc 1 667 17
 1782 0124 7B68     		ldr	r3, [r7, #4]
 1783 0126 1B68     		ldr	r3, [r3]
 1784              		.loc 1 667 32
 1785 0128 1A68     		ldr	r2, [r3]
 1786              		.loc 1 667 17
 1787 012a 7B68     		ldr	r3, [r7, #4]
 1788 012c 1B68     		ldr	r3, [r3]
 1789              		.loc 1 667 32
 1790 012e 22F08002 		bic	r2, r2, #128
 1791 0132 1A60     		str	r2, [r3]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 45


 1792              	.L88:
 668:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 669:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 670:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 671:drivers/Src/stm32f767xx_usart_driver.c **** 	
 672:drivers/Src/stm32f767xx_usart_driver.c **** /*************************Check for RXNE flag ********************************************/
 673:drivers/Src/stm32f767xx_usart_driver.c **** 
 674:drivers/Src/stm32f767xx_usart_driver.c **** 	temp1 = pUSARTHandle->pUSARTx->ISR & ( 1 << USART_ISR_RXNE);
 1793              		.loc 1 674 22
 1794 0134 7B68     		ldr	r3, [r7, #4]
 1795 0136 1B68     		ldr	r3, [r3]
 1796              		.loc 1 674 31
 1797 0138 DB69     		ldr	r3, [r3, #28]
 1798              		.loc 1 674 8
 1799 013a 03F02003 		and	r3, r3, #32
 1800 013e 7B61     		str	r3, [r7, #20]
 675:drivers/Src/stm32f767xx_usart_driver.c **** 	temp2 = pUSARTHandle->pUSARTx->CR1 & ( 1 << USART_CR1_RXNEIE);
 1801              		.loc 1 675 22
 1802 0140 7B68     		ldr	r3, [r7, #4]
 1803 0142 1B68     		ldr	r3, [r3]
 1804              		.loc 1 675 31
 1805 0144 1B68     		ldr	r3, [r3]
 1806              		.loc 1 675 8
 1807 0146 03F02003 		and	r3, r3, #32
 1808 014a 3B61     		str	r3, [r7, #16]
 676:drivers/Src/stm32f767xx_usart_driver.c **** 
 677:drivers/Src/stm32f767xx_usart_driver.c **** 
 678:drivers/Src/stm32f767xx_usart_driver.c **** 	if(temp1 && temp2 )
 1809              		.loc 1 678 4
 1810 014c 7B69     		ldr	r3, [r7, #20]
 1811 014e 002B     		cmp	r3, #0
 1812 0150 73D0     		beq	.L92
 1813              		.loc 1 678 11 discriminator 1
 1814 0152 3B69     		ldr	r3, [r7, #16]
 1815 0154 002B     		cmp	r3, #0
 1816 0156 70D0     		beq	.L92
 679:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 680:drivers/Src/stm32f767xx_usart_driver.c **** 		//this interrupt is because of rxne
 681:drivers/Src/stm32f767xx_usart_driver.c **** 		
 682:drivers/Src/stm32f767xx_usart_driver.c **** 		if(pUSARTHandle->RxBusyState == USART_BUSY_IN_RX)
 1817              		.loc 1 682 18
 1818 0158 7B68     		ldr	r3, [r7, #4]
 1819 015a 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 1820              		.loc 1 682 5
 1821 015e 012B     		cmp	r3, #1
 1822 0160 6BD1     		bne	.L92
 683:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 684:drivers/Src/stm32f767xx_usart_driver.c **** 			//TXE is set so send data
 685:drivers/Src/stm32f767xx_usart_driver.c **** 			if(pUSARTHandle->RxLen > 0)
 1823              		.loc 1 685 19
 1824 0162 7B68     		ldr	r3, [r7, #4]
 1825 0164 DB69     		ldr	r3, [r3, #28]
 1826              		.loc 1 685 6
 1827 0166 002B     		cmp	r3, #0
 1828 0168 53D0     		beq	.L93
 686:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 687:drivers/Src/stm32f767xx_usart_driver.c **** 				//Check the USART_WordLength to decide whether we are going to receive 9bit of data in a frame 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 46


 688:drivers/Src/stm32f767xx_usart_driver.c **** 				if(pUSARTHandle->USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 1829              		.loc 1 688 34
 1830 016a 7B68     		ldr	r3, [r7, #4]
 1831 016c 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1832              		.loc 1 688 7
 1833 016e 012B     		cmp	r3, #1
 1834 0170 2FD1     		bne	.L94
 689:drivers/Src/stm32f767xx_usart_driver.c **** 				{
 690:drivers/Src/stm32f767xx_usart_driver.c **** 					//We are going to receive 9bit data in a frame
 691:drivers/Src/stm32f767xx_usart_driver.c **** 
 692:drivers/Src/stm32f767xx_usart_driver.c **** 					//Now, check are we using USART_ParityControl control or not
 693:drivers/Src/stm32f767xx_usart_driver.c **** 					if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 1835              		.loc 1 693 35
 1836 0172 7B68     		ldr	r3, [r7, #4]
 1837 0174 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1838              		.loc 1 693 8
 1839 0176 002B     		cmp	r3, #0
 1840 0178 19D1     		bne	.L95
 694:drivers/Src/stm32f767xx_usart_driver.c **** 					{
 695:drivers/Src/stm32f767xx_usart_driver.c **** 						//No parity is used. so, all 9bits will be of user data
 696:drivers/Src/stm32f767xx_usart_driver.c **** 
 697:drivers/Src/stm32f767xx_usart_driver.c **** 						//read only first 9 bits so mask the DR with 0x01FF
 698:drivers/Src/stm32f767xx_usart_driver.c **** 						*((uint16_t*) pUSARTHandle->pRxBuffer) = (pUSARTHandle->pUSARTx->RDR  & (uint16_t)0x01FF);
 1841              		.loc 1 698 61
 1842 017a 7B68     		ldr	r3, [r7, #4]
 1843 017c 1B68     		ldr	r3, [r3]
 1844              		.loc 1 698 70
 1845 017e 5B6A     		ldr	r3, [r3, #36]
 1846              		.loc 1 698 77
 1847 0180 9AB2     		uxth	r2, r3
 1848              		.loc 1 698 33
 1849 0182 7B68     		ldr	r3, [r7, #4]
 1850 0184 5B69     		ldr	r3, [r3, #20]
 1851              		.loc 1 698 77
 1852 0186 C2F30802 		ubfx	r2, r2, #0, #9
 1853 018a 92B2     		uxth	r2, r2
 1854              		.loc 1 698 46
 1855 018c 1A80     		strh	r2, [r3]	@ movhi
 699:drivers/Src/stm32f767xx_usart_driver.c **** 
 700:drivers/Src/stm32f767xx_usart_driver.c **** 						//increment the pRxBuffer two times
 701:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->pRxBuffer++;
 1856              		.loc 1 701 19
 1857 018e 7B68     		ldr	r3, [r7, #4]
 1858 0190 5B69     		ldr	r3, [r3, #20]
 1859              		.loc 1 701 30
 1860 0192 5A1C     		adds	r2, r3, #1
 1861 0194 7B68     		ldr	r3, [r7, #4]
 1862 0196 5A61     		str	r2, [r3, #20]
 702:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->pRxBuffer++;
 1863              		.loc 1 702 19
 1864 0198 7B68     		ldr	r3, [r7, #4]
 1865 019a 5B69     		ldr	r3, [r3, #20]
 1866              		.loc 1 702 30
 1867 019c 5A1C     		adds	r2, r3, #1
 1868 019e 7B68     		ldr	r3, [r7, #4]
 1869 01a0 5A61     		str	r2, [r3, #20]
 703:drivers/Src/stm32f767xx_usart_driver.c **** 						
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 47


 704:drivers/Src/stm32f767xx_usart_driver.c **** 						//decrement the length
 705:drivers/Src/stm32f767xx_usart_driver.c **** 						pUSARTHandle->RxLen-=2;
 1870              		.loc 1 705 26
 1871 01a2 7B68     		ldr	r3, [r7, #4]
 1872 01a4 DB69     		ldr	r3, [r3, #28]
 1873 01a6 9A1E     		subs	r2, r3, #2
 1874 01a8 7B68     		ldr	r3, [r7, #4]
 1875 01aa DA61     		str	r2, [r3, #28]
 1876 01ac 31E0     		b	.L93
 1877              	.L95:
 706:drivers/Src/stm32f767xx_usart_driver.c **** 					}
 707:drivers/Src/stm32f767xx_usart_driver.c **** 					else
 708:drivers/Src/stm32f767xx_usart_driver.c **** 					{
 709:drivers/Src/stm32f767xx_usart_driver.c **** 						//Parity is used. so, 8bits will be of user data and 1 bit is parity
 710:drivers/Src/stm32f767xx_usart_driver.c **** 						 *pUSARTHandle->pRxBuffer = (pUSARTHandle->pUSARTx->RDR  & (uint8_t)0xFF);
 1878              		.loc 1 710 48
 1879 01ae 7B68     		ldr	r3, [r7, #4]
 1880 01b0 1B68     		ldr	r3, [r3]
 1881              		.loc 1 710 57
 1882 01b2 5A6A     		ldr	r2, [r3, #36]
 1883              		.loc 1 710 21
 1884 01b4 7B68     		ldr	r3, [r7, #4]
 1885 01b6 5B69     		ldr	r3, [r3, #20]
 1886              		.loc 1 710 33
 1887 01b8 D2B2     		uxtb	r2, r2
 1888 01ba 1A70     		strb	r2, [r3]
 711:drivers/Src/stm32f767xx_usart_driver.c **** 						 
 712:drivers/Src/stm32f767xx_usart_driver.c **** 						 //increment the pRxBuffer
 713:drivers/Src/stm32f767xx_usart_driver.c **** 						 pUSARTHandle->pRxBuffer++;
 1889              		.loc 1 713 20
 1890 01bc 7B68     		ldr	r3, [r7, #4]
 1891 01be 5B69     		ldr	r3, [r3, #20]
 1892              		.loc 1 713 31
 1893 01c0 5A1C     		adds	r2, r3, #1
 1894 01c2 7B68     		ldr	r3, [r7, #4]
 1895 01c4 5A61     		str	r2, [r3, #20]
 714:drivers/Src/stm32f767xx_usart_driver.c **** 						 
 715:drivers/Src/stm32f767xx_usart_driver.c **** 						 //Implement the code to decrement the length
 716:drivers/Src/stm32f767xx_usart_driver.c **** 						 pUSARTHandle->RxLen-=1;
 1896              		.loc 1 716 27
 1897 01c6 7B68     		ldr	r3, [r7, #4]
 1898 01c8 DB69     		ldr	r3, [r3, #28]
 1899 01ca 5A1E     		subs	r2, r3, #1
 1900 01cc 7B68     		ldr	r3, [r7, #4]
 1901 01ce DA61     		str	r2, [r3, #28]
 1902 01d0 1FE0     		b	.L93
 1903              	.L94:
 717:drivers/Src/stm32f767xx_usart_driver.c **** 					}
 718:drivers/Src/stm32f767xx_usart_driver.c **** 				}
 719:drivers/Src/stm32f767xx_usart_driver.c **** 				else
 720:drivers/Src/stm32f767xx_usart_driver.c **** 				{
 721:drivers/Src/stm32f767xx_usart_driver.c **** 					//We are going to receive 8bit data in a frame
 722:drivers/Src/stm32f767xx_usart_driver.c **** 
 723:drivers/Src/stm32f767xx_usart_driver.c **** 					//Now, check are we using USART_ParityControl control or not
 724:drivers/Src/stm32f767xx_usart_driver.c **** 					if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 1904              		.loc 1 724 35
 1905 01d2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 48


 1906 01d4 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1907              		.loc 1 724 8
 1908 01d6 002B     		cmp	r3, #0
 1909 01d8 07D1     		bne	.L96
 725:drivers/Src/stm32f767xx_usart_driver.c **** 					{
 726:drivers/Src/stm32f767xx_usart_driver.c **** 						//No parity is used , so all 8bits will be of user data
 727:drivers/Src/stm32f767xx_usart_driver.c **** 
 728:drivers/Src/stm32f767xx_usart_driver.c **** 						//read 8 bits from DR
 729:drivers/Src/stm32f767xx_usart_driver.c **** 						 *pUSARTHandle->pRxBuffer = (uint8_t) (pUSARTHandle->pUSARTx->RDR  & (uint8_t)0xFF);
 1910              		.loc 1 729 58
 1911 01da 7B68     		ldr	r3, [r7, #4]
 1912 01dc 1B68     		ldr	r3, [r3]
 1913              		.loc 1 729 67
 1914 01de 5A6A     		ldr	r2, [r3, #36]
 1915              		.loc 1 729 21
 1916 01e0 7B68     		ldr	r3, [r7, #4]
 1917 01e2 5B69     		ldr	r3, [r3, #20]
 1918              		.loc 1 729 35
 1919 01e4 D2B2     		uxtb	r2, r2
 1920              		.loc 1 729 33
 1921 01e6 1A70     		strb	r2, [r3]
 1922 01e8 09E0     		b	.L97
 1923              	.L96:
 730:drivers/Src/stm32f767xx_usart_driver.c **** 					}
 731:drivers/Src/stm32f767xx_usart_driver.c **** 
 732:drivers/Src/stm32f767xx_usart_driver.c **** 					else
 733:drivers/Src/stm32f767xx_usart_driver.c **** 					{
 734:drivers/Src/stm32f767xx_usart_driver.c **** 						//Parity is used, so , 7 bits will be of user data and 1 bit is parity
 735:drivers/Src/stm32f767xx_usart_driver.c **** 
 736:drivers/Src/stm32f767xx_usart_driver.c **** 						//read only 7 bits , hence mask the DR with 0X7F
 737:drivers/Src/stm32f767xx_usart_driver.c **** 						 *pUSARTHandle->pRxBuffer = (uint8_t) (pUSARTHandle->pUSARTx->RDR  & (uint8_t)0x7F);
 1924              		.loc 1 737 58
 1925 01ea 7B68     		ldr	r3, [r7, #4]
 1926 01ec 1B68     		ldr	r3, [r3]
 1927              		.loc 1 737 67
 1928 01ee 5B6A     		ldr	r3, [r3, #36]
 1929              		.loc 1 737 35
 1930 01f0 DAB2     		uxtb	r2, r3
 1931              		.loc 1 737 21
 1932 01f2 7B68     		ldr	r3, [r7, #4]
 1933 01f4 5B69     		ldr	r3, [r3, #20]
 1934              		.loc 1 737 35
 1935 01f6 02F07F02 		and	r2, r2, #127
 1936 01fa D2B2     		uxtb	r2, r2
 1937              		.loc 1 737 33
 1938 01fc 1A70     		strb	r2, [r3]
 1939              	.L97:
 738:drivers/Src/stm32f767xx_usart_driver.c **** 
 739:drivers/Src/stm32f767xx_usart_driver.c **** 					}
 740:drivers/Src/stm32f767xx_usart_driver.c **** 
 741:drivers/Src/stm32f767xx_usart_driver.c **** 					//increment the pRxBuffer
 742:drivers/Src/stm32f767xx_usart_driver.c **** 					pUSARTHandle->pRxBuffer++;
 1940              		.loc 1 742 18
 1941 01fe 7B68     		ldr	r3, [r7, #4]
 1942 0200 5B69     		ldr	r3, [r3, #20]
 1943              		.loc 1 742 29
 1944 0202 5A1C     		adds	r2, r3, #1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 49


 1945 0204 7B68     		ldr	r3, [r7, #4]
 1946 0206 5A61     		str	r2, [r3, #20]
 743:drivers/Src/stm32f767xx_usart_driver.c **** 					
 744:drivers/Src/stm32f767xx_usart_driver.c **** 					//decrement the length
 745:drivers/Src/stm32f767xx_usart_driver.c **** 					pUSARTHandle->RxLen-=1;
 1947              		.loc 1 745 25
 1948 0208 7B68     		ldr	r3, [r7, #4]
 1949 020a DB69     		ldr	r3, [r3, #28]
 1950 020c 5A1E     		subs	r2, r3, #1
 1951 020e 7B68     		ldr	r3, [r7, #4]
 1952 0210 DA61     		str	r2, [r3, #28]
 1953              	.L93:
 746:drivers/Src/stm32f767xx_usart_driver.c **** 				}		
 747:drivers/Src/stm32f767xx_usart_driver.c **** 					
 748:drivers/Src/stm32f767xx_usart_driver.c **** 					
 749:drivers/Src/stm32f767xx_usart_driver.c **** 			}//if of >0
 750:drivers/Src/stm32f767xx_usart_driver.c **** 
 751:drivers/Src/stm32f767xx_usart_driver.c **** 			if(! pUSARTHandle->RxLen)
 1954              		.loc 1 751 21
 1955 0212 7B68     		ldr	r3, [r7, #4]
 1956 0214 DB69     		ldr	r3, [r3, #28]
 1957              		.loc 1 751 6
 1958 0216 002B     		cmp	r3, #0
 1959 0218 0FD1     		bne	.L92
 752:drivers/Src/stm32f767xx_usart_driver.c **** 			{
 753:drivers/Src/stm32f767xx_usart_driver.c **** 				//disable the rxne
 754:drivers/Src/stm32f767xx_usart_driver.c **** 				pUSARTHandle->pUSARTx->CR1 &= ~( 1 << USART_CR1_RXNEIE );
 1960              		.loc 1 754 17
 1961 021a 7B68     		ldr	r3, [r7, #4]
 1962 021c 1B68     		ldr	r3, [r3]
 1963              		.loc 1 754 32
 1964 021e 1A68     		ldr	r2, [r3]
 1965              		.loc 1 754 17
 1966 0220 7B68     		ldr	r3, [r7, #4]
 1967 0222 1B68     		ldr	r3, [r3]
 1968              		.loc 1 754 32
 1969 0224 22F02002 		bic	r2, r2, #32
 1970 0228 1A60     		str	r2, [r3]
 755:drivers/Src/stm32f767xx_usart_driver.c **** 				pUSARTHandle->RxBusyState = USART_READY;
 1971              		.loc 1 755 31
 1972 022a 7B68     		ldr	r3, [r7, #4]
 1973 022c 0022     		movs	r2, #0
 1974 022e 83F82120 		strb	r2, [r3, #33]
 756:drivers/Src/stm32f767xx_usart_driver.c **** 				USART_ApplicationEventCallback(pUSARTHandle,USART_EVENT_RX_CMPLT);
 1975              		.loc 1 756 5
 1976 0232 0121     		movs	r1, #1
 1977 0234 7868     		ldr	r0, [r7, #4]
 1978 0236 FFF7FEFF 		bl	USART_ApplicationEventCallback
 1979              	.L92:
 757:drivers/Src/stm32f767xx_usart_driver.c **** 			}
 758:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 759:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 760:drivers/Src/stm32f767xx_usart_driver.c **** 	
 761:drivers/Src/stm32f767xx_usart_driver.c **** 	
 762:drivers/Src/stm32f767xx_usart_driver.c **** /*************************Check for CTS flag ********************************************/
 763:drivers/Src/stm32f767xx_usart_driver.c **** //Note : CTS feature is not applicable for UART4 and UART5
 764:drivers/Src/stm32f767xx_usart_driver.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 50


 765:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the status of CTS bit in the SR
 766:drivers/Src/stm32f767xx_usart_driver.c **** 	temp1 = pUSARTHandle->pUSARTx->ISR & ( 1 << USART_ISR_CTS);
 1980              		.loc 1 766 22
 1981 023a 7B68     		ldr	r3, [r7, #4]
 1982 023c 1B68     		ldr	r3, [r3]
 1983              		.loc 1 766 31
 1984 023e DB69     		ldr	r3, [r3, #28]
 1985              		.loc 1 766 8
 1986 0240 03F48063 		and	r3, r3, #1024
 1987 0244 7B61     		str	r3, [r7, #20]
 767:drivers/Src/stm32f767xx_usart_driver.c **** 	
 768:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the state of CTSE bit in CR3
 769:drivers/Src/stm32f767xx_usart_driver.c **** 	temp2 = pUSARTHandle->pUSARTx->CR3 & ( 1 << USART_CR3_CTSE);
 1988              		.loc 1 769 22
 1989 0246 7B68     		ldr	r3, [r7, #4]
 1990 0248 1B68     		ldr	r3, [r3]
 1991              		.loc 1 769 31
 1992 024a 9B68     		ldr	r3, [r3, #8]
 1993              		.loc 1 769 8
 1994 024c 03F40073 		and	r3, r3, #512
 1995 0250 3B61     		str	r3, [r7, #16]
 770:drivers/Src/stm32f767xx_usart_driver.c **** 	
 771:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the state of CTSIE bit in CR3 (This bit is not available for UART4 & UART5.)
 772:drivers/Src/stm32f767xx_usart_driver.c **** 	// temp3 = pUSARTHandle->pUSARTx->CR3 & ( 1 << USART_CR3_CTSIE);
 773:drivers/Src/stm32f767xx_usart_driver.c **** 
 774:drivers/Src/stm32f767xx_usart_driver.c **** 
 775:drivers/Src/stm32f767xx_usart_driver.c **** 	if(temp1  && temp2 )
 1996              		.loc 1 775 4
 1997 0252 7B69     		ldr	r3, [r7, #20]
 1998 0254 002B     		cmp	r3, #0
 1999 0256 0ED0     		beq	.L98
 2000              		.loc 1 775 12 discriminator 1
 2001 0258 3B69     		ldr	r3, [r7, #16]
 2002 025a 002B     		cmp	r3, #0
 2003 025c 0BD0     		beq	.L98
 776:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 777:drivers/Src/stm32f767xx_usart_driver.c **** 		//clear the CTS flag in SR
 778:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->pUSARTx->ICR |= ( 1 << USART_ICR_CTSCF);
 2004              		.loc 1 778 15
 2005 025e 7B68     		ldr	r3, [r7, #4]
 2006 0260 1B68     		ldr	r3, [r3]
 2007              		.loc 1 778 30
 2008 0262 1A6A     		ldr	r2, [r3, #32]
 2009              		.loc 1 778 15
 2010 0264 7B68     		ldr	r3, [r7, #4]
 2011 0266 1B68     		ldr	r3, [r3]
 2012              		.loc 1 778 30
 2013 0268 42F40072 		orr	r2, r2, #512
 2014 026c 1A62     		str	r2, [r3, #32]
 779:drivers/Src/stm32f767xx_usart_driver.c **** 		
 780:drivers/Src/stm32f767xx_usart_driver.c **** 		//this interrupt is because of cts
 781:drivers/Src/stm32f767xx_usart_driver.c **** 		USART_ApplicationEventCallback(pUSARTHandle,USART_EVENT_CTS);
 2015              		.loc 1 781 3
 2016 026e 0321     		movs	r1, #3
 2017 0270 7868     		ldr	r0, [r7, #4]
 2018 0272 FFF7FEFF 		bl	USART_ApplicationEventCallback
 2019              	.L98:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 51


 782:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 783:drivers/Src/stm32f767xx_usart_driver.c **** 
 784:drivers/Src/stm32f767xx_usart_driver.c **** /*************************Check for IDLE detection flag *******************************************
 785:drivers/Src/stm32f767xx_usart_driver.c **** 
 786:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the status of IDLE flag bit in the SR
 787:drivers/Src/stm32f767xx_usart_driver.c **** 	temp1 = pUSARTHandle->pUSARTx->ISR & ( 1 << USART_ISR_IDLE);
 2020              		.loc 1 787 22
 2021 0276 7B68     		ldr	r3, [r7, #4]
 2022 0278 1B68     		ldr	r3, [r3]
 2023              		.loc 1 787 31
 2024 027a DB69     		ldr	r3, [r3, #28]
 2025              		.loc 1 787 8
 2026 027c 03F01003 		and	r3, r3, #16
 2027 0280 7B61     		str	r3, [r7, #20]
 788:drivers/Src/stm32f767xx_usart_driver.c **** 	
 789:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the state of IDLEIE bit in CR1
 790:drivers/Src/stm32f767xx_usart_driver.c **** 	temp2 = pUSARTHandle->pUSARTx->CR1 & ( 1 << USART_CR1_IDLEIE);
 2028              		.loc 1 790 22
 2029 0282 7B68     		ldr	r3, [r7, #4]
 2030 0284 1B68     		ldr	r3, [r3]
 2031              		.loc 1 790 31
 2032 0286 1B68     		ldr	r3, [r3]
 2033              		.loc 1 790 8
 2034 0288 03F01003 		and	r3, r3, #16
 2035 028c 3B61     		str	r3, [r7, #16]
 791:drivers/Src/stm32f767xx_usart_driver.c **** 
 792:drivers/Src/stm32f767xx_usart_driver.c **** 
 793:drivers/Src/stm32f767xx_usart_driver.c **** 	if(temp1 && temp2)
 2036              		.loc 1 793 4
 2037 028e 7B69     		ldr	r3, [r7, #20]
 2038 0290 002B     		cmp	r3, #0
 2039 0292 0ED0     		beq	.L99
 2040              		.loc 1 793 11 discriminator 1
 2041 0294 3B69     		ldr	r3, [r7, #16]
 2042 0296 002B     		cmp	r3, #0
 2043 0298 0BD0     		beq	.L99
 794:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 795:drivers/Src/stm32f767xx_usart_driver.c **** 		//clear the IDLE flag. 
 796:drivers/Src/stm32f767xx_usart_driver.c **** 		pUSARTHandle->pUSARTx->ICR |= ( 1 << USART_ICR_IDLECF);
 2044              		.loc 1 796 15
 2045 029a 7B68     		ldr	r3, [r7, #4]
 2046 029c 1B68     		ldr	r3, [r3]
 2047              		.loc 1 796 30
 2048 029e 1A6A     		ldr	r2, [r3, #32]
 2049              		.loc 1 796 15
 2050 02a0 7B68     		ldr	r3, [r7, #4]
 2051 02a2 1B68     		ldr	r3, [r3]
 2052              		.loc 1 796 30
 2053 02a4 42F01002 		orr	r2, r2, #16
 2054 02a8 1A62     		str	r2, [r3, #32]
 797:drivers/Src/stm32f767xx_usart_driver.c **** 		
 798:drivers/Src/stm32f767xx_usart_driver.c **** 		//this interrupt is because of idle
 799:drivers/Src/stm32f767xx_usart_driver.c **** 		USART_ApplicationEventCallback(pUSARTHandle,USART_EVENT_IDLE);
 2055              		.loc 1 799 3
 2056 02aa 0221     		movs	r1, #2
 2057 02ac 7868     		ldr	r0, [r7, #4]
 2058 02ae FFF7FEFF 		bl	USART_ApplicationEventCallback
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 52


 2059              	.L99:
 800:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 801:drivers/Src/stm32f767xx_usart_driver.c **** 
 802:drivers/Src/stm32f767xx_usart_driver.c **** /*************************Check for Overrun detection flag ****************************************
 803:drivers/Src/stm32f767xx_usart_driver.c **** 
 804:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the status of ORE flag  in the SR
 805:drivers/Src/stm32f767xx_usart_driver.c **** 	temp1 = pUSARTHandle->pUSARTx->ISR & USART_ISR_ORE;
 2060              		.loc 1 805 22
 2061 02b2 7B68     		ldr	r3, [r7, #4]
 2062 02b4 1B68     		ldr	r3, [r3]
 2063              		.loc 1 805 31
 2064 02b6 DB69     		ldr	r3, [r3, #28]
 2065              		.loc 1 805 8
 2066 02b8 03F00303 		and	r3, r3, #3
 2067 02bc 7B61     		str	r3, [r7, #20]
 806:drivers/Src/stm32f767xx_usart_driver.c **** 	
 807:drivers/Src/stm32f767xx_usart_driver.c **** 	//check the status of RXNEIE  bit in the CR1
 808:drivers/Src/stm32f767xx_usart_driver.c **** 	temp2 = pUSARTHandle->pUSARTx->CR1 & USART_CR1_RXNEIE;
 2068              		.loc 1 808 22
 2069 02be 7B68     		ldr	r3, [r7, #4]
 2070 02c0 1B68     		ldr	r3, [r3]
 2071              		.loc 1 808 31
 2072 02c2 1B68     		ldr	r3, [r3]
 2073              		.loc 1 808 8
 2074 02c4 03F00503 		and	r3, r3, #5
 2075 02c8 3B61     		str	r3, [r7, #16]
 809:drivers/Src/stm32f767xx_usart_driver.c **** 
 810:drivers/Src/stm32f767xx_usart_driver.c **** 
 811:drivers/Src/stm32f767xx_usart_driver.c **** 	if(temp1  && temp2 )
 2076              		.loc 1 811 4
 2077 02ca 7B69     		ldr	r3, [r7, #20]
 2078 02cc 002B     		cmp	r3, #0
 2079 02ce 06D0     		beq	.L100
 2080              		.loc 1 811 12 discriminator 1
 2081 02d0 3B69     		ldr	r3, [r7, #16]
 2082 02d2 002B     		cmp	r3, #0
 2083 02d4 03D0     		beq	.L100
 812:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 813:drivers/Src/stm32f767xx_usart_driver.c **** 		//Need not to clear the ORE flag here, instead give an api for the application to clear the ORE f
 814:drivers/Src/stm32f767xx_usart_driver.c **** 		
 815:drivers/Src/stm32f767xx_usart_driver.c **** 		//this interrupt is because of Overrun error 
 816:drivers/Src/stm32f767xx_usart_driver.c **** 		USART_ApplicationEventCallback(pUSARTHandle,USART_ERR_ORE);
 2084              		.loc 1 816 3
 2085 02d6 0721     		movs	r1, #7
 2086 02d8 7868     		ldr	r0, [r7, #4]
 2087 02da FFF7FEFF 		bl	USART_ApplicationEventCallback
 2088              	.L100:
 817:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 818:drivers/Src/stm32f767xx_usart_driver.c **** 
 819:drivers/Src/stm32f767xx_usart_driver.c **** 
 820:drivers/Src/stm32f767xx_usart_driver.c **** 
 821:drivers/Src/stm32f767xx_usart_driver.c **** /*************************Check for Error Flag ********************************************/
 822:drivers/Src/stm32f767xx_usart_driver.c **** 
 823:drivers/Src/stm32f767xx_usart_driver.c **** //Noise Flag, Overrun error and Framing Error in multibuffer communication
 824:drivers/Src/stm32f767xx_usart_driver.c **** //We dont discuss multibuffer communication in this course. please refer to the RM
 825:drivers/Src/stm32f767xx_usart_driver.c **** //The blow code will get executed only if multibuffer mode is used. 
 826:drivers/Src/stm32f767xx_usart_driver.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 53


 827:drivers/Src/stm32f767xx_usart_driver.c **** 	temp2 =  pUSARTHandle->pUSARTx->CR3 & ( 1 << USART_CR3_EIE) ;
 2089              		.loc 1 827 23
 2090 02de 7B68     		ldr	r3, [r7, #4]
 2091 02e0 1B68     		ldr	r3, [r3]
 2092              		.loc 1 827 32
 2093 02e2 9B68     		ldr	r3, [r3, #8]
 2094              		.loc 1 827 8
 2095 02e4 03F00103 		and	r3, r3, #1
 2096 02e8 3B61     		str	r3, [r7, #16]
 828:drivers/Src/stm32f767xx_usart_driver.c **** 
 829:drivers/Src/stm32f767xx_usart_driver.c **** 	if(temp2 )
 2097              		.loc 1 829 4
 2098 02ea 3B69     		ldr	r3, [r7, #16]
 2099 02ec 002B     		cmp	r3, #0
 2100 02ee 1ED0     		beq	.L104
 830:drivers/Src/stm32f767xx_usart_driver.c **** 	{
 831:drivers/Src/stm32f767xx_usart_driver.c **** 		temp1 = pUSARTHandle->pUSARTx->ISR;
 2101              		.loc 1 831 23
 2102 02f0 7B68     		ldr	r3, [r7, #4]
 2103 02f2 1B68     		ldr	r3, [r3]
 2104              		.loc 1 831 9
 2105 02f4 DB69     		ldr	r3, [r3, #28]
 2106 02f6 7B61     		str	r3, [r7, #20]
 832:drivers/Src/stm32f767xx_usart_driver.c **** 		if(temp1 & ( 1 << USART_ISR_FE))
 2107              		.loc 1 832 12
 2108 02f8 7B69     		ldr	r3, [r7, #20]
 2109 02fa 03F00203 		and	r3, r3, #2
 2110              		.loc 1 832 5
 2111 02fe 002B     		cmp	r3, #0
 2112 0300 03D0     		beq	.L102
 833:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 834:drivers/Src/stm32f767xx_usart_driver.c **** 			/*
 835:drivers/Src/stm32f767xx_usart_driver.c **** 				This bit is set by hardware when a de-synchronization, excessive noise or a break character
 836:drivers/Src/stm32f767xx_usart_driver.c **** 				is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register.
 837:drivers/Src/stm32f767xx_usart_driver.c **** 			*/
 838:drivers/Src/stm32f767xx_usart_driver.c **** 			USART_ApplicationEventCallback(pUSARTHandle,USART_ERR_FE);
 2113              		.loc 1 838 4
 2114 0302 0521     		movs	r1, #5
 2115 0304 7868     		ldr	r0, [r7, #4]
 2116 0306 FFF7FEFF 		bl	USART_ApplicationEventCallback
 2117              	.L102:
 839:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 840:drivers/Src/stm32f767xx_usart_driver.c **** 
 841:drivers/Src/stm32f767xx_usart_driver.c **** 		if(temp1 & ( 1 << USART_ISR_NF) )
 2118              		.loc 1 841 12
 2119 030a 7B69     		ldr	r3, [r7, #20]
 2120 030c 03F00403 		and	r3, r3, #4
 2121              		.loc 1 841 5
 2122 0310 002B     		cmp	r3, #0
 2123 0312 03D0     		beq	.L103
 842:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 843:drivers/Src/stm32f767xx_usart_driver.c **** 			/*
 844:drivers/Src/stm32f767xx_usart_driver.c **** 				This bit is set by hardware when noise is detected on a received frame. It is cleared by
 845:drivers/Src/stm32f767xx_usart_driver.c **** 				software, writing 1 to the NFCF bit in the USART_ICR register.
 846:drivers/Src/stm32f767xx_usart_driver.c **** 			*/
 847:drivers/Src/stm32f767xx_usart_driver.c **** 			USART_ApplicationEventCallback(pUSARTHandle,USART_ERR_NE);
 2124              		.loc 1 847 4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 54


 2125 0314 0621     		movs	r1, #6
 2126 0316 7868     		ldr	r0, [r7, #4]
 2127 0318 FFF7FEFF 		bl	USART_ApplicationEventCallback
 2128              	.L103:
 848:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 849:drivers/Src/stm32f767xx_usart_driver.c **** 
 850:drivers/Src/stm32f767xx_usart_driver.c **** 		if(temp1 & ( 1 << USART_ISR_ORE) )
 2129              		.loc 1 850 12
 2130 031c 7B69     		ldr	r3, [r7, #20]
 2131 031e 03F00803 		and	r3, r3, #8
 2132              		.loc 1 850 5
 2133 0322 002B     		cmp	r3, #0
 2134 0324 03D0     		beq	.L104
 851:drivers/Src/stm32f767xx_usart_driver.c **** 		{
 852:drivers/Src/stm32f767xx_usart_driver.c **** 			USART_ApplicationEventCallback(pUSARTHandle,USART_ERR_ORE);
 2135              		.loc 1 852 4
 2136 0326 0721     		movs	r1, #7
 2137 0328 7868     		ldr	r0, [r7, #4]
 2138 032a FFF7FEFF 		bl	USART_ApplicationEventCallback
 2139              	.L104:
 853:drivers/Src/stm32f767xx_usart_driver.c **** 		}
 854:drivers/Src/stm32f767xx_usart_driver.c **** 	}
 855:drivers/Src/stm32f767xx_usart_driver.c **** 
 856:drivers/Src/stm32f767xx_usart_driver.c **** 
 857:drivers/Src/stm32f767xx_usart_driver.c **** } 
 2140              		.loc 1 857 1
 2141 032e 00BF     		nop
 2142 0330 1837     		adds	r7, r7, #24
 2143              		.cfi_def_cfa_offset 8
 2144 0332 BD46     		mov	sp, r7
 2145              		.cfi_def_cfa_register 13
 2146              		@ sp needed
 2147 0334 80BD     		pop	{r7, pc}
 2148              		.cfi_endproc
 2149              	.LFE13:
 2151              		.section	.text.USART_ApplicationEventCallback,"ax",%progbits
 2152              		.align	1
 2153              		.weak	USART_ApplicationEventCallback
 2154              		.syntax unified
 2155              		.thumb
 2156              		.thumb_func
 2158              	USART_ApplicationEventCallback:
 2159              	.LFB14:
 858:drivers/Src/stm32f767xx_usart_driver.c **** 
 859:drivers/Src/stm32f767xx_usart_driver.c **** 
 860:drivers/Src/stm32f767xx_usart_driver.c **** 
 861:drivers/Src/stm32f767xx_usart_driver.c **** 
 862:drivers/Src/stm32f767xx_usart_driver.c **** /**
 863:drivers/Src/stm32f767xx_usart_driver.c ****  * @brief USART Application Event Callback
 864:drivers/Src/stm32f767xx_usart_driver.c ****  * 
 865:drivers/Src/stm32f767xx_usart_driver.c ****  * @param pUSARTHandle 
 866:drivers/Src/stm32f767xx_usart_driver.c ****  * @param AppEv 
 867:drivers/Src/stm32f767xx_usart_driver.c ****  * @note __weak 
 868:drivers/Src/stm32f767xx_usart_driver.c ****  */
 869:drivers/Src/stm32f767xx_usart_driver.c **** __weak void USART_ApplicationEventCallback(USART_Handle_t *pUSARTHandle,uint8_t AppEv)
 870:drivers/Src/stm32f767xx_usart_driver.c **** {
 2160              		.loc 1 870 1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 55


 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 8
 2163              		@ frame_needed = 1, uses_anonymous_args = 0
 2164              		@ link register save eliminated.
 2165 0000 80B4     		push	{r7}
 2166              		.cfi_def_cfa_offset 4
 2167              		.cfi_offset 7, -4
 2168 0002 83B0     		sub	sp, sp, #12
 2169              		.cfi_def_cfa_offset 16
 2170 0004 00AF     		add	r7, sp, #0
 2171              		.cfi_def_cfa_register 7
 2172 0006 7860     		str	r0, [r7, #4]
 2173 0008 0B46     		mov	r3, r1
 2174 000a FB70     		strb	r3, [r7, #3]
 871:drivers/Src/stm32f767xx_usart_driver.c ****     // weak implementation --- the application may override this function
 872:drivers/Src/stm32f767xx_usart_driver.c **** }
 2175              		.loc 1 872 1
 2176 000c 00BF     		nop
 2177 000e 0C37     		adds	r7, r7, #12
 2178              		.cfi_def_cfa_offset 4
 2179 0010 BD46     		mov	sp, r7
 2180              		.cfi_def_cfa_register 13
 2181              		@ sp needed
 2182 0012 5DF8047B 		ldr	r7, [sp], #4
 2183              		.cfi_restore 7
 2184              		.cfi_def_cfa_offset 0
 2185 0016 7047     		bx	lr
 2186              		.cfi_endproc
 2187              	.LFE14:
 2189              		.text
 2190              	.Letext0:
 2191              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 2192              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 2193              		.file 4 "drivers/Inc/stm32f767xx.h"
 2194              		.file 5 "drivers/Inc/stm32f767xx_usart_driver.h"
 2195              		.file 6 "drivers/Inc/stm32f767xx_rcc_driver.h"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f767xx_usart_driver.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:19     .text.USART_PeriClockControl:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:25     .text.USART_PeriClockControl:0000000000000000 USART_PeriClockControl
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:283    .text.USART_PeriClockControl:000000000000017c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:296    .text.USART_SetBaudRate:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:302    .text.USART_SetBaudRate:0000000000000000 USART_SetBaudRate
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:408    .text.USART_SetBaudRate:0000000000000088 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:414    .text.USART_Init:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:420    .text.USART_Init:0000000000000000 USART_Init
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:605    .text.USART_DeInit:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:611    .text.USART_DeInit:0000000000000000 USART_DeInit
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:641    .text.USART_PeripheralControl:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:647    .text.USART_PeripheralControl:0000000000000000 USART_PeripheralControl
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:699    .text.USART_GetFlagStatus:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:705    .text.USART_GetFlagStatus:0000000000000000 USART_GetFlagStatus
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:752    .text.USART_ClearFlag:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:758    .text.USART_ClearFlag:0000000000000000 USART_ClearFlag
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:790    .text.USART_SendData:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:796    .text.USART_SendData:0000000000000000 USART_SendData
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:926    .text.USART_ReceiveData:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:932    .text.USART_ReceiveData:0000000000000000 USART_ReceiveData
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1078   .text.USART_IRQInterruptConfig:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1084   .text.USART_IRQInterruptConfig:0000000000000000 USART_IRQInterruptConfig
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1323   .text.USART_IRQInterruptConfig:0000000000000160 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1336   .text.USART_IRQPriorityConfig:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1342   .text.USART_IRQPriorityConfig:0000000000000000 USART_IRQPriorityConfig
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1405   .text.USART_IRQPriorityConfig:000000000000004c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1410   .text.USART_SendDataIT:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1416   .text.USART_SendDataIT:0000000000000000 USART_SendDataIT
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1493   .text.USART_ReceiveDataIT:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1499   .text.USART_ReceiveDataIT:0000000000000000 USART_ReceiveDataIT
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1565   .text.USART_IRQHandling:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:1571   .text.USART_IRQHandling:0000000000000000 USART_IRQHandling
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:2158   .text.USART_ApplicationEventCallback:0000000000000000 USART_ApplicationEventCallback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cciwl352.s:2152   .text.USART_ApplicationEventCallback:0000000000000000 $t

UNDEFINED SYMBOLS
RCC_GetPCLK2Value
RCC_GetPCLK1Value
